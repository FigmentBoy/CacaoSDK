#!/bin/bash

srcpath="$( cd "$( dirname "$0" )" && pwd )"
relink=''
update=''

print_usage() {
    printf "
    Usage: projectName [-d destinationPath] [-l] [-u]

    projectName               Name of the project
    -d destinationPath        The destination path of the project, Projects/projectName if omitted
    -l                        To relink the Cacao directory if it is broken
    -u                        To update the old Cacao project to new

    For Example: 
    ./create
    ./create MyProject
    ./create -l -d ./cloned_path/cloned_project

    -h                        Show the help text
    "
}

fix_link() {
    if [ -L "$copypath/Cacao" ]; then
        rm "$copypath/Cacao"
    fi
    relpath=`python -c "import os.path; print(os.path.relpath('$srcpath/Source/Cacao', '$copypath'))"`
    cd $copypath
    ln -s $relpath Cacao
}

copy_files() {
    cp "$srcpath/Template/.gitignore" "$copypath"
    cp "$srcpath/Template/CMakeLists.txt" "$copypath"
    cp "$srcpath/Template/README.md" "$copypath"
    cp "$srcpath/Template/CacTemplate.sublime-project" "$copypath/$projname.sublime-project"
    sed -i '' "s/CacTemplate/$projname/g" "$copypath/CMakeLists.txt"
    sed -i '' "s/CacTemplate/$projname/g" "$copypath/README.md.txt"
    sed -i '' "s/CacTemplate/$projname/g" "$copypath/$projname.sublime-project"
}

while getopts 'd:lhu' flag; do
	case "${flag}" in
		d) copypath="${OPTARG}" ;;
		l) relink='true' ;;
		u) update='true' ;;
		h) print_usage
			exit 0 ;;
		*) print_usage
			exit 1 ;;
	esac
done

shift $((OPTIND-1))

projname="${1:-Default Project}"
if [ -z "$copypath" ]; then
	if [[ -z "${CACAO_PROJECT_FOLDER}" ]]; then
		copypath="$projname"
	else
		copypath="${CACAO_PROJECT_FOLDER}/$projname"
	fi
fi

if (( $# + $OPTIND > 1 )); then
	echo $projname
	if [ "$relink" = 'true' ]; then
		echo "Fixing link"
		fix_link
	elif [ "$update" = 'true' ]; then
		echo "Updating project"

		fix_link
		copy_files
	else
		if [ ! -d "$copypath" ]; then
			echo "Creating folder"
			mkdir -p "$copypath"
		fi
		echo "Copying files"

		touch "$copypath/main.cpp"
		echo "#define PROJECT_NAME \"$projname\"" >> "$copypath/main.cpp"
		cat "$srcpath/Template/main.cpp" >> "$copypath/main.cpp"

        fix_link
		copy_files
		
	fi
	echo "Done."
else 
	print_usage
	exit 1
fi
