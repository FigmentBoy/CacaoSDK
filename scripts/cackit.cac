@interface GameObject
    int getGroupID(int) = 0x33ae10;
    void setPosition(CCPoint) = 0x335850;
    void setStartPos(CCPoint) = 0x2fa520;
    void selectObject(_ccColor3B) = 0x341f90;
    void setupCoinArt() = 0x337dd0;
    void destroyObject() = 0x336a00;
    void playShineEffect() = 0x2fa9d0;
    void calculateSpawnXPos() = 0x336970;
    bool init(char const*) = 0x2f5520;
@end

@interface GameManager
    _ccColor3B colorForIdx(int) = 0x1cbc80;
    void doQuickSave() = 0x1d0200;
    void fadeInMusic(char const*) = 0x1c2ff0;
    void reloadAllStep5() = 0x1d0b00;
    int getGameVariable(char const*) = 0x1cccd0;
    int setGameVariable(char const*, bool) = 0x1cca80;
    bool accountStatusChanged() = 0x1cdad0;
    void load() = 0x26ee20;
    void loadFont(int) = 0x1cc550;
    void reloadAll(bool, bool, bool) = 0x1d08a0;
@end

@interface PlayerObject
    void pushButton(int) = 0x22aa00;
    void updateJump(float) = 0x219680;
    void flipGravity(bool, bool) = 0x21c090;
    void setSecondColor(_ccColor3B const&) = 0x219610;
    void addAllParticles() = 0x2189b0;
    void setColor(_ccColor3B const&) = 0x22cdf0;
    void update(float) = 0x218bf0;
@end

@interface ObjectToolbox
    c_string intKeyToFrame(int) = 0x4173b0;
@end

@interface CCTextInputNode
    void setAllowedChars(std::string) = 0x5d360;
    void setMaxLabelScale(float) = 0x5da30;
    void setMaxLabelWidth(float) = 0x5da50;
    void setLabelPlaceholderColor(_ccColor3B) = 0x5da90;
    std::string getString() = 0x5d6f0;
    void setString(std::string) = 0x5d3e0;
@end

@interface EndPortalObject
    void updateColors(_ccColor3B) = 0x1dacb0;
@end

@interface GJBaseGameLayer
    void spawnGroup(int) = 0xb7050;
    void addToSection(GameObject*) = 0xb7b70;
    void playerTouchedRing(PlayerObject*, GameObject*) = 0xb69e0;
@end

@interface EditorPauseLayer
    void saveLevel() = 0x13ebd0;
@end

@interface GameSoundManager
    void stopBackgroundMusic() = 0x362130;
@end

@interface LevelEditorLayer
    void createObject(int, CCPoint, bool) = 0x957c0;
    void handleAction(bool, CCArray*) = 0x97020;
    void removeObject(GameObject*, bool) = 0x96890;
    void redoLastAction() = 0x97750;
    void undoLastAction() = 0x97770;
    void removeAllObjects() = 0x93d80;
    int getNextFreeGroupID(CCArray*) = 0x9a1b0;
    GameObject* addObjectFromString(std::string) = 0x94640;
    void createObjectsFromString(std::string) = 0x94730;
@end

@interface CCMenuItemToggler
    void setSizeMult(float) = 0x38a40;
    void toggle(bool) = 0x38950;
@end

@interface CCMenuItemSpriteExtra
    void setSizeMult(float) = 0x1255e0;
@end

@interface MoreVideoOptionsLayer
    bool init() = 0x444150;
@end

@interface Slider
    void setBarVisibility(bool) = 0x18e280;
    float getValue() = 0x18e0c0;
    void setValue(float) = 0x18e170;
@end

@interface CCLabelBMFont
    void limitLabelWidth(float, float, float) = 0x34a6e0;
    void setScale(float) = 0x34a5d0;
    void setString(char const*, bool) = 0x3489e0;
@end


@interface CCMouseDelegate
    void rightKeyUp() = 0x61c0;
    void scrollWheel(float, float) = 0x61d0;
    void rightKeyDown() = 0x61b0;
@end

@interface CCNode
    void _setZOrder(int) = 0x122990;
    float getVertexZ() = 0x1229e0;
    void setVertexZ(float) = 0x1229f0;
    void setVisible(bool) = 0x122d60;
    void unschedule(Cacao::CC_SEL) = 0x124180;
    CCArray* getChildren() = 0x122c80;
    CCPoint getPosition() = 0x122b60;
    float getRotation() = 0x122a00;
    void* getUserData() = 0x122f30;
    void setPosition(float, float) = 0x122ba0;
    void setRotation(float) = 0x122a10;
    void setUserData(void*) = 0x122f40;
    float getPositionX() = 0x122be0;
    float getPositionY() = 0x122bf0;
    float getRotationX() = 0x122a50;
    float getRotationY() = 0x122a80;
    float getScheduler() = 0x123f70;
    void setPositionX(float) = 0x122c00;
    void setPositionY(float) = 0x122c40;
    void setRotationX(float) = 0x122a60;
    void setRotationY(float) = 0x122a90;
    CCNode* getChildByTag(int) = 0x123220;
    CCObject* getUserObject() = 0x122f80;
    void setUserObject(CCObject*) = 0x122fb0;
    void setContentSize(CCSize) = 0x122e50;
@end

@interface EditorUI
    void deselectAll() = 0x1f300;
    void onDuplicate(CCObject*) = 0x18ba0;
    void enableButton(CreateMenuItem*) = 0x1bff0;
    CreateMenuItem* getCreateBtn(int, int) = 0x1f6c0;
    void pasteObjects(std::string) = 0x232d0;
    void disableButton(CreateMenuItem*) = 0x1c0f0;
    void selectObjects(CCArray*, bool) = 0x23940;
    void updateButtons() = 0x1a300;
    void redoLastAction() = 0xb8e0;
    void undoLastAction() = 0xb830;
    CCArray* getSelectedObjects() = 0x23f30;
@end

@interface InfoLayer
    void onRefreshComments(CCObject*) = 0x459b60;
    void loadPage(int, bool) = 0x458fb0;
@end

@interface MenuLayer
    void keyBackClicked() = 0x1d3170;
    void onQuit(CCObject*) = 0x1d2b40;
    void onMoreGames(CCObject*) = 0x1d2ad0;
@end

@interface CCKeyboardDispatcher
    void dispatchKeyboardMSG(int, bool) = 0xe8190;
@end

@interface PlayLayer
    void resetLevel() = 0x71c50;
    void switchToScene(GJGameLevel*) = 0xe5d50;
    void update(float) = 0x77900;
    void addObject(GameObject*) = 0x70e50;
    void flipGravity(PlayerObject*, bool, bool) = 0x7cd10;
@end

@interface CreatorLayer
    bool init() = 0x141c10;
@end