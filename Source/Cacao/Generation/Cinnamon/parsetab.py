
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'bodyADDRESS ASSIGN CLASS COLON COMMA CONST CONSTP IDENT INCLUDE LCURLY LPAREN LTRI NUM OPTCALL RCURLY RPAREN RTRI SEMI STATIC STDCALL TEMPLATEDATA THISCALL UNSIGNED VIRTUAL VOLATILE VOLATILEDATA WHITESPACEempty :body : bodypurebody : emptybodypure : bodypure bodypurebodypure : class LCURLY info RCURLYbodypure : INCLUDE LTRI RTRIclass : CLASS IDENTclass : CLASS IDENT COLON classbaseclassbase : classbase COMMA classbaseclassbase : IDENTinfo : info infoinfo : functioninfo : volatileinfo : membermember : declaration offset SEMImember : declaration SEMIfunction : VIRTUAL purefunction offset SEMIfunction : STATIC purefunction offset SEMIfunction : purefunction offset SEMIpurefunction : declaration parameterpurefunction : declaration parameter CONSTpurefunction : name parameteroffset : ASSIGN ADDRESSparameter : LPAREN pureparameter RPARENpureparameter : pureparameter COMMA pureparameterpureparameter : typepureparameter : declarationpureparameter : emptydeclaration : type namename : IDENTtype : puretypepuretype : puretype templatepuretype : UNSIGNED puretypepuretype : CONST puretypepuretype : puretype CONSTPpuretype : IDENTtemplate : LTRI puretemplate RTRIpuretemplate : TEMPLATEDATApuretemplate : TEMPLATEDATA puretemplatepuretemplate : template puretemplatevolatile : VOLATILE purevolatilepurevolatile : LCURLY purevolatile RCURLYpurevolatile : purevolatile purevolatilepurevolatile : VOLATILEDATApurevolatile : LCURLY RCURLYpurevolatile : SEMI'
    
_lr_action_items = {'INCLUDE':([0,2,7,26,29,],[5,5,5,-6,-5,]),'$end':([0,1,2,3,7,26,29,],[-1,0,-2,-3,-4,-6,-5,]),'CLASS':([0,2,7,26,29,],[6,6,6,-6,-5,]),'LCURLY':([4,10,18,35,36,37,38,52,53,58,59,60,73,79,],[8,-7,36,36,36,-44,-46,-10,-8,36,36,-45,-42,-9,]),'LTRI':([5,23,24,43,44,48,49,50,51,68,69,76,],[9,-36,50,50,-36,-32,-35,50,50,50,50,-37,]),'IDENT':([6,8,11,12,13,14,15,17,20,22,23,24,25,27,28,35,37,38,40,42,43,44,48,49,51,55,58,60,61,64,70,71,72,73,75,76,],[10,23,23,-12,-13,-14,23,23,44,47,-36,-31,44,52,23,-41,-44,-46,-16,44,-34,-36,-32,-35,-33,-19,-43,-45,-15,47,52,-17,-18,-42,44,-37,]),'VIRTUAL':([8,11,12,13,14,28,35,37,38,40,55,58,60,61,71,72,73,],[15,15,-12,-13,-14,15,-41,-44,-46,-16,-19,-43,-45,-15,-17,-18,-42,]),'STATIC':([8,11,12,13,14,28,35,37,38,40,55,58,60,61,71,72,73,],[17,17,-12,-13,-14,17,-41,-44,-46,-16,-19,-43,-45,-15,-17,-18,-42,]),'VOLATILE':([8,11,12,13,14,28,35,37,38,40,55,58,60,61,71,72,73,],[18,18,-12,-13,-14,18,-41,-44,-46,-16,-19,-43,-45,-15,-17,-18,-42,]),'UNSIGNED':([8,11,12,13,14,15,17,20,25,28,35,37,38,40,42,55,58,60,61,71,72,73,75,],[25,25,-12,-13,-14,25,25,25,25,25,-41,-44,-46,-16,25,-19,-43,-45,-15,-17,-18,-42,25,]),'CONST':([8,11,12,13,14,15,17,20,25,28,35,37,38,40,41,42,55,58,60,61,71,72,73,74,75,],[20,20,-12,-13,-14,20,20,20,20,20,-41,-44,-46,-16,62,20,-19,-43,-45,-15,-17,-18,-42,-24,20,]),'RTRI':([9,67,68,77,78,],[26,76,-38,-39,-40,]),'COLON':([10,],[27,]),'RCURLY':([11,12,13,14,28,35,36,37,38,40,55,58,59,60,61,71,72,73,],[29,-12,-13,-14,-11,-41,60,-44,-46,-16,-19,-43,73,-45,-15,-17,-18,-42,]),'ASSIGN':([16,19,30,34,41,45,46,47,62,74,],[33,33,33,33,-20,-22,-29,-30,-21,-24,]),'VOLATILEDATA':([18,35,36,37,38,58,59,60,73,],[37,37,37,-44,-46,37,37,-45,-42,]),'SEMI':([18,19,32,35,36,37,38,39,46,47,54,56,57,58,59,60,73,],[38,40,55,38,38,-44,-46,61,-29,-30,71,-23,72,38,38,-45,-42,]),'LPAREN':([19,21,23,31,46,47,],[42,42,-30,42,-29,-30,]),'CONSTP':([23,24,43,44,48,49,51,76,],[-36,49,49,-36,-32,-35,49,-37,]),'RPAREN':([24,42,43,44,46,47,48,49,51,63,64,65,66,75,76,80,],[-31,-1,-34,-36,-29,-30,-32,-35,-33,74,-26,-27,-28,-1,-37,-25,]),'COMMA':([24,42,43,44,46,47,48,49,51,52,53,63,64,65,66,75,76,79,80,],[-31,-1,-34,-36,-29,-30,-32,-35,-33,-10,70,75,-26,-27,-28,-1,-37,70,75,]),'ADDRESS':([33,],[56,]),'TEMPLATEDATA':([50,68,69,76,],[68,68,68,-37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([0,],[1,]),'bodypure':([0,2,7,],[2,7,7,]),'empty':([0,42,75,],[3,66,66,]),'class':([0,2,7,],[4,4,4,]),'info':([8,11,28,],[11,28,28,]),'function':([8,11,28,],[12,12,12,]),'volatile':([8,11,28,],[13,13,13,]),'member':([8,11,28,],[14,14,14,]),'purefunction':([8,11,15,17,28,],[16,16,30,34,16,]),'declaration':([8,11,15,17,28,42,75,],[19,19,31,31,19,65,65,]),'name':([8,11,15,17,22,28,64,],[21,21,21,21,46,21,46,]),'type':([8,11,15,17,28,42,75,],[22,22,22,22,22,64,64,]),'puretype':([8,11,15,17,20,25,28,42,75,],[24,24,24,24,43,51,24,24,24,]),'offset':([16,19,30,34,],[32,39,54,57,]),'purevolatile':([18,35,36,58,59,],[35,58,59,58,58,]),'parameter':([19,21,31,],[41,45,41,]),'template':([24,43,50,51,68,69,],[48,48,69,48,69,69,]),'classbase':([27,70,],[53,79,]),'pureparameter':([42,75,],[63,80,]),'puretemplate':([50,68,69,],[67,77,78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> body","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',61),
  ('body -> bodypure','body',1,'p_body_body','Parser.py',79),
  ('body -> empty','body',1,'p_body_empty','Parser.py',84),
  ('bodypure -> bodypure bodypure','bodypure',2,'p_bodypure_bodypure','Parser.py',89),
  ('bodypure -> class LCURLY info RCURLY','bodypure',4,'p_bodypure_body','Parser.py',94),
  ('bodypure -> INCLUDE LTRI RTRI','bodypure',3,'p_bodypure_include','Parser.py',101),
  ('class -> CLASS IDENT','class',2,'p_class_class','Parser.py',113),
  ('class -> CLASS IDENT COLON classbase','class',4,'p_class_based','Parser.py',120),
  ('classbase -> classbase COMMA classbase','classbase',3,'p_classbase_bases','Parser.py',131),
  ('classbase -> IDENT','classbase',1,'p_classbase_base','Parser.py',136),
  ('info -> info info','info',2,'p_info_infos','Parser.py',144),
  ('info -> function','info',1,'p_info_function','Parser.py',149),
  ('info -> volatile','info',1,'p_info_volatile','Parser.py',154),
  ('info -> member','info',1,'p_info_member','Parser.py',159),
  ('member -> declaration offset SEMI','member',3,'p_member_normal','Parser.py',167),
  ('member -> declaration SEMI','member',2,'p_member_offsetless','Parser.py',174),
  ('function -> VIRTUAL purefunction offset SEMI','function',4,'p_function_virtual','Parser.py',183),
  ('function -> STATIC purefunction offset SEMI','function',4,'p_function_static','Parser.py',191),
  ('function -> purefunction offset SEMI','function',3,'p_function_normal','Parser.py',199),
  ('purefunction -> declaration parameter','purefunction',2,'p_purefunction_pure','Parser.py',206),
  ('purefunction -> declaration parameter CONST','purefunction',3,'p_purefunction_const','Parser.py',214),
  ('purefunction -> name parameter','purefunction',2,'p_purefunction_returnless','Parser.py',223),
  ('offset -> ASSIGN ADDRESS','offset',2,'p_offset_offset','Parser.py',234),
  ('parameter -> LPAREN pureparameter RPAREN','parameter',3,'p_parameter_parameter','Parser.py',242),
  ('pureparameter -> pureparameter COMMA pureparameter','pureparameter',3,'p_pureparameter_types','Parser.py',247),
  ('pureparameter -> type','pureparameter',1,'p_pureparameter_type','Parser.py',252),
  ('pureparameter -> declaration','pureparameter',1,'p_pureparameter_declaration','Parser.py',257),
  ('pureparameter -> empty','pureparameter',1,'p_pureparameter_empty','Parser.py',262),
  ('declaration -> type name','declaration',2,'p_declaration_declaration','Parser.py',270),
  ('name -> IDENT','name',1,'p_name_name','Parser.py',277),
  ('type -> puretype','type',1,'p_type_type','Parser.py',287),
  ('puretype -> puretype template','puretype',2,'p_puretype_templated','Parser.py',294),
  ('puretype -> UNSIGNED puretype','puretype',2,'p_puretype_unsigned','Parser.py',299),
  ('puretype -> CONST puretype','puretype',2,'p_puretype_constl','Parser.py',304),
  ('puretype -> puretype CONSTP','puretype',2,'p_puretype_constp','Parser.py',309),
  ('puretype -> IDENT','puretype',1,'p_puretype_puretype','Parser.py',314),
  ('template -> LTRI puretemplate RTRI','template',3,'p_template_template','Parser.py',322),
  ('puretemplate -> TEMPLATEDATA','puretemplate',1,'p_puretemplate_data','Parser.py',327),
  ('puretemplate -> TEMPLATEDATA puretemplate','puretemplate',2,'p_puretemplate_datas','Parser.py',332),
  ('puretemplate -> template puretemplate','puretemplate',2,'p_puretemplate_recurse','Parser.py',337),
  ('volatile -> VOLATILE purevolatile','volatile',2,'p_volatile_start','Parser.py',345),
  ('purevolatile -> LCURLY purevolatile RCURLY','purevolatile',3,'p_purevolatile_recurse','Parser.py',350),
  ('purevolatile -> purevolatile purevolatile','purevolatile',2,'p_purevolatile_datas','Parser.py',355),
  ('purevolatile -> VOLATILEDATA','purevolatile',1,'p_purevolatile_data','Parser.py',360),
  ('purevolatile -> LCURLY RCURLY','purevolatile',2,'p_purevolatile_empty','Parser.py',365),
  ('purevolatile -> SEMI','purevolatile',1,'p_purevolatile_semi','Parser.py',371),
]
