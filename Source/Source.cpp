// 
// Copyright camila314 & alk1m123 2021. 
// Autogenerated using a python script
//
#include <Header.hpp>

cocos2d::CCObject::~CCObject() {
    reinterpret_cast<cocos2d::CCObject*(*)(cocos2d::CCObject*)>(base+0x250d90)(this);
}

bool cocos2d::CCObject::isEqual(cocos2d::CCObject const* p0) {
    return reinterpret_cast<bool(*)(cocos2d::CCObject*, cocos2d::CCObject const*)>(base+0x250f20)(this, p0);
}

void cocos2d::CCObject::acceptVisitor(cocos2d::CCDataVisitor& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCObject*, cocos2d::CCDataVisitor&)>(base+0x250f30)(this, p0);
}

void cocos2d::CCObject::update(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCObject*, float)>(base+0x32660)(this, p0);
}

void cocos2d::CCObject::encodeWithCoder(DS_Dictionary* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCObject*, DS_Dictionary*)>(base+0x250f70)(this, p0);
}

bool cocos2d::CCObject::canEncode() {
    return reinterpret_cast<bool(*)(cocos2d::CCObject*)>(base+0x250f90)(this);
}

int cocos2d::CCObject::getTag() const {
    return reinterpret_cast<int(*)(const cocos2d::CCObject*)>(base+0x250f50)(this);
}

void cocos2d::CCObject::setTag(int p0) {
    return reinterpret_cast<void(*)(cocos2d::CCObject*, int)>(base+0x250f60)(this, p0);
}

cocos2d::CCObject::CCObject() {
    reinterpret_cast<cocos2d::CCObject*(*)(cocos2d::CCObject*)>(base+0x250ca0)(this);
}

cocos2d::CCObject* cocos2d::CCCopying::copyWithZone(cocos2d::CCZone*) {
    // 2 people complimented my hair today i feel happy
    //
    // add 3 to that c:
    return 0;
};

cocos2d::CCSize::CCSize(const cocos2d::CCPoint& point) : width(point.x), height(point.y) {};

cocos2d::CCSize& cocos2d::CCSize::operator=(const cocos2d::CCPoint& point) {
    setSize(point.x, point.y);
    return *this;
};

cocos2d::CCPoint::CCPoint(const cocos2d::CCSize& size) : x(size.width), y(size.height) {};

cocos2d::CCPoint& cocos2d::CCPoint::operator=(const cocos2d::CCSize& size) {
    setPoint(size.width, size.height);
    return *this;
};

cocos2d::CCNode::~CCNode() {
    reinterpret_cast<cocos2d::CCNode*(*)(cocos2d::CCNode*)>(base+0x1228d0)(this);
}

void cocos2d::CCNode::update(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float)>(base+0x1241a0)(this, p0);
}

bool cocos2d::CCNode::init() {
    return reinterpret_cast<bool(*)(cocos2d::CCNode*)>(base+0x122910)(this);
}

void cocos2d::CCNode::setZOrder(int p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, int)>(base+0x1229a0)(this, p0);
}

void cocos2d::CCNode::_setZOrder(int p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, int)>(base+0x122990)(this, p0);
}

int cocos2d::CCNode::getZOrder() {
    return reinterpret_cast<int(*)(cocos2d::CCNode*)>(base+0x122980)(this);
}

void cocos2d::CCNode::setVertexZ(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float)>(base+0x1229f0)(this, p0);
}

float cocos2d::CCNode::getVertexZ() {
    return reinterpret_cast<float(*)(cocos2d::CCNode*)>(base+0x1229e0)(this);
}

void cocos2d::CCNode::setScaleX(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float)>(base+0x122b10)(this, p0);
}

float cocos2d::CCNode::getScaleX() {
    return reinterpret_cast<float(*)(cocos2d::CCNode*)>(base+0x122b00)(this);
}

void cocos2d::CCNode::setScaleY(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float)>(base+0x122b40)(this, p0);
}

float cocos2d::CCNode::getScaleY() {
    return reinterpret_cast<float(*)(cocos2d::CCNode*)>(base+0x122b30)(this);
}

void cocos2d::CCNode::setScale(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float)>(base+0x122ac0)(this, p0);
}

float cocos2d::CCNode::getScale() {
    return reinterpret_cast<float(*)(cocos2d::CCNode*)>(base+0x122ab0)(this);
}

void cocos2d::CCNode::setScale(float p0, float p1) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float, float)>(base+0x122ae0)(this, p0, p1);
}

void cocos2d::CCNode::setPosition(cocos2d::CCPoint const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCPoint const&)>(base+0x122b70)(this, p0);
}

cocos2d::CCPoint const& cocos2d::CCNode::getPosition() {
    return reinterpret_cast<cocos2d::CCPoint const&(*)(cocos2d::CCNode*)>(base+0x122b60)(this);
}

void cocos2d::CCNode::setPosition(float p0, float p1) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float, float)>(base+0x122ba0)(this, p0, p1);
}

void cocos2d::CCNode::getPosition(float* p0, float* p1) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float*, float*)>(base+0x122b90)(this, p0, p1);
}

void cocos2d::CCNode::setPositionX(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float)>(base+0x122c00)(this, p0);
}

float cocos2d::CCNode::getPositionX() {
    return reinterpret_cast<float(*)(cocos2d::CCNode*)>(base+0x122be0)(this);
}

void cocos2d::CCNode::setPositionY(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float)>(base+0x122c40)(this, p0);
}

float cocos2d::CCNode::getPositionY() {
    return reinterpret_cast<float(*)(cocos2d::CCNode*)>(base+0x122bf0)(this);
}

void cocos2d::CCNode::setSkewX(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float)>(base+0x122930)(this, p0);
}

float cocos2d::CCNode::getSkewX() {
    return reinterpret_cast<float(*)(cocos2d::CCNode*)>(base+0x122920)(this);
}

void cocos2d::CCNode::setSkewY(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float)>(base+0x122960)(this, p0);
}

float cocos2d::CCNode::getSkewY() {
    return reinterpret_cast<float(*)(cocos2d::CCNode*)>(base+0x122950)(this);
}

void cocos2d::CCNode::setAnchorPoint(cocos2d::CCPoint const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCPoint const&)>(base+0x122d90)(this, p0);
}

cocos2d::CCPoint const& cocos2d::CCNode::getAnchorPoint() {
    return reinterpret_cast<cocos2d::CCPoint const&(*)(cocos2d::CCNode*)>(base+0x122d80)(this);
}

cocos2d::CCPoint const& cocos2d::CCNode::getAnchorPointInPoints() {
    return reinterpret_cast<cocos2d::CCPoint const&(*)(cocos2d::CCNode*)>(base+0x122d70)(this);
}

void cocos2d::CCNode::setContentSize(cocos2d::CCSize const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCSize const&)>(base+0x122e50)(this, p0);
}

cocos2d::CCSize const& cocos2d::CCNode::getContentSize() const {
    return reinterpret_cast<cocos2d::CCSize const&(*)(const cocos2d::CCNode*)>(base+0x122e00)(this);
}

cocos2d::CCSize cocos2d::CCNode::getScaledContentSize() {
    return reinterpret_cast<cocos2d::CCSize(*)(cocos2d::CCNode*)>(base+0x122e10)(this);
}

void cocos2d::CCNode::setVisible(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, bool)>(base+0x122d60)(this, p0);
}

bool cocos2d::CCNode::isVisible() {
    return reinterpret_cast<bool(*)(cocos2d::CCNode*)>(base+0x122d50)(this);
}

void cocos2d::CCNode::setRotation(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float)>(base+0x122a10)(this, p0);
}

float cocos2d::CCNode::getRotation() {
    return reinterpret_cast<float(*)(cocos2d::CCNode*)>(base+0x122a00)(this);
}

void cocos2d::CCNode::setRotationX(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float)>(base+0x122a60)(this, p0);
}

float cocos2d::CCNode::getRotationX() {
    return reinterpret_cast<float(*)(cocos2d::CCNode*)>(base+0x122a50)(this);
}

void cocos2d::CCNode::setRotationY(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float)>(base+0x122a90)(this, p0);
}

float cocos2d::CCNode::getRotationY() {
    return reinterpret_cast<float(*)(cocos2d::CCNode*)>(base+0x122a80)(this);
}

void cocos2d::CCNode::setOrderOfArrival(unsigned int p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, unsigned int)>(base+0x122f60)(this, p0);
}

unsigned int cocos2d::CCNode::getOrderOfArrival() {
    return reinterpret_cast<unsigned int(*)(cocos2d::CCNode*)>(base+0x122f50)(this);
}

void cocos2d::CCNode::setGLServerState(cocos2d::ccGLServerState p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::ccGLServerState)>(base+0x122fa0)(this, p0);
}

cocos2d::ccGLServerState cocos2d::CCNode::getGLServerState() {
    return reinterpret_cast<cocos2d::ccGLServerState(*)(cocos2d::CCNode*)>(base+0x122f90)(this);
}

void cocos2d::CCNode::ignoreAnchorPointForPosition(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, bool)>(base+0x122f00)(this, p0);
}

bool cocos2d::CCNode::isIgnoreAnchorPointForPosition() {
    return reinterpret_cast<bool(*)(cocos2d::CCNode*)>(base+0x122ef0)(this);
}

void cocos2d::CCNode::addChild(cocos2d::CCNode* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCNode*)>(base+0x1233d0)(this, p0);
}

void cocos2d::CCNode::addChild(cocos2d::CCNode* p0, int p1) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCNode*, int)>(base+0x1233b0)(this, p0, p1);
}

void cocos2d::CCNode::addChild(cocos2d::CCNode* p0, int p1, int p2) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCNode*, int, int)>(base+0x1232a0)(this, p0, p1, p2);
}

cocos2d::CCNode* cocos2d::CCNode::getChildByTag(int p0) {
    return reinterpret_cast<cocos2d::CCNode*(*)(cocos2d::CCNode*, int)>(base+0x123220)(this, p0);
}

cocos2d::CCArray* cocos2d::CCNode::getChildren() {
    return reinterpret_cast<cocos2d::CCArray*(*)(cocos2d::CCNode*)>(base+0x122c80)(this);
}

unsigned int cocos2d::CCNode::getChildrenCount() const {
    return reinterpret_cast<unsigned int(*)(const cocos2d::CCNode*)>(base+0x122c90)(this);
}

void cocos2d::CCNode::setParent(cocos2d::CCNode* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCNode*)>(base+0x122ee0)(this, p0);
}

cocos2d::CCNode* cocos2d::CCNode::getParent() {
    return reinterpret_cast<cocos2d::CCNode*(*)(cocos2d::CCNode*)>(base+0x122ed0)(this);
}

void cocos2d::CCNode::removeFromParent() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x1233f0)(this);
}

void cocos2d::CCNode::removeFromParentAndCleanup(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, bool)>(base+0x123410)(this, p0);
}

void cocos2d::CCNode::removeMeAndCleanup() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x123440)(this);
}

void cocos2d::CCNode::removeChild(cocos2d::CCNode* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCNode*)>(base+0x123460)(this, p0);
}

void cocos2d::CCNode::removeChild(cocos2d::CCNode* p0, bool p1) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCNode*, bool)>(base+0x123480)(this, p0, p1);
}

void cocos2d::CCNode::removeChildByTag(int p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, int)>(base+0x1235a0)(this, p0);
}

void cocos2d::CCNode::removeChildByTag(int p0, bool p1) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, int, bool)>(base+0x1235c0)(this, p0, p1);
}

void cocos2d::CCNode::removeAllChildren() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x123600)(this);
}

void cocos2d::CCNode::removeAllChildrenWithCleanup(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, bool)>(base+0x123620)(this, p0);
}

void cocos2d::CCNode::reorderChild(cocos2d::CCNode* p0, int p1) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCNode*, int)>(base+0x123760)(this, p0, p1);
}

void cocos2d::CCNode::sortAllChildren() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x1237b0)(this);
}

cocos2d::CCGridBase* cocos2d::CCNode::getGrid() {
    return reinterpret_cast<cocos2d::CCGridBase*(*)(cocos2d::CCNode*)>(base+0x122d00)(this);
}

void cocos2d::CCNode::setGrid(cocos2d::CCGridBase* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCGridBase*)>(base+0x122d10)(this, p0);
}

void* cocos2d::CCNode::getUserData() {
    return reinterpret_cast<void*(*)(cocos2d::CCNode*)>(base+0x122f30)(this);
}

void cocos2d::CCNode::setUserData(void* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, void*)>(base+0x122f40)(this, p0);
}

cocos2d::CCObject* cocos2d::CCNode::getUserObject() {
    return reinterpret_cast<cocos2d::CCObject*(*)(cocos2d::CCNode*)>(base+0x122f80)(this);
}

void cocos2d::CCNode::setUserObject(cocos2d::CCObject* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCObject*)>(base+0x122fb0)(this, p0);
}

cocos2d::CCGLProgram* cocos2d::CCNode::getShaderProgram() {
    return reinterpret_cast<cocos2d::CCGLProgram*(*)(cocos2d::CCNode*)>(base+0x122f70)(this);
}

void cocos2d::CCNode::setShaderProgram(cocos2d::CCGLProgram* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCGLProgram*)>(base+0x122ff0)(this, p0);
}

cocos2d::CCCamera* cocos2d::CCNode::getCamera() {
    return reinterpret_cast<cocos2d::CCCamera*(*)(cocos2d::CCNode*)>(base+0x122cb0)(this);
}

bool cocos2d::CCNode::isRunning() {
    return reinterpret_cast<bool(*)(cocos2d::CCNode*)>(base+0x122ec0)(this);
}

void cocos2d::CCNode::registerScriptHandler(int p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, int)>(base+0x123d90)(this, p0);
}

void cocos2d::CCNode::unregisterScriptHandler() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x123dc0)(this);
}

void cocos2d::CCNode::onEnter() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x123a90)(this);
}

void cocos2d::CCNode::onEnterTransitionDidFinish() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x123b90)(this);
}

void cocos2d::CCNode::onExit() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x123ca0)(this);
}

void cocos2d::CCNode::onExitTransitionDidStart() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x123c00)(this);
}

void cocos2d::CCNode::cleanup() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x123100)(this);
}

void cocos2d::CCNode::draw() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x123840)(this);
}

void cocos2d::CCNode::visit() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x123850)(this);
}

void cocos2d::CCNode::setActionManager(cocos2d::CCActionManager* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCActionManager*)>(base+0x123e00)(this, p0);
}

cocos2d::CCActionManager* cocos2d::CCNode::getActionManager() {
    return reinterpret_cast<cocos2d::CCActionManager*(*)(cocos2d::CCNode*)>(base+0x123e50)(this);
}

void cocos2d::CCNode::setScheduler(cocos2d::CCScheduler* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, cocos2d::CCScheduler*)>(base+0x123f20)(this, p0);
}

cocos2d::CCScheduler* cocos2d::CCNode::getScheduler() {
    return reinterpret_cast<cocos2d::CCScheduler*(*)(cocos2d::CCNode*)>(base+0x123f70)(this);
}

void cocos2d::CCNode::updateTransform() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x1249d0)(this);
}

const cocos2d::CCAffineTransform cocos2d::CCNode::nodeToParentTransform() {
    return reinterpret_cast<const cocos2d::CCAffineTransform(*)(cocos2d::CCNode*)>(base+0x124210)(this);
}

const cocos2d::CCAffineTransform cocos2d::CCNode::parentToNodeTransform() {
    return reinterpret_cast<const cocos2d::CCAffineTransform(*)(cocos2d::CCNode*)>(base+0x1245d0)(this);
}

cocos2d::CCAffineTransform cocos2d::CCNode::nodeToWorldTransform() {
    return reinterpret_cast<cocos2d::CCAffineTransform(*)(cocos2d::CCNode*)>(base+0x124670)(this);
}

cocos2d::CCAffineTransform cocos2d::CCNode::worldToNodeTransform() {
    return reinterpret_cast<cocos2d::CCAffineTransform(*)(cocos2d::CCNode*)>(base+0x124710)(this);
}

bool cocos2d::CCNode::addComponent(cocos2d::CCComponent* p0) {
    return reinterpret_cast<bool(*)(cocos2d::CCNode*, cocos2d::CCComponent*)>(base+0x124a40)(this, p0);
}

bool cocos2d::CCNode::removeComponent(char const* p0) {
    return reinterpret_cast<bool(*)(cocos2d::CCNode*, char const*)>(base+0x124a60)(this, p0);
}

bool cocos2d::CCNode::removeComponent(cocos2d::CCComponent* p0) {
    return reinterpret_cast<bool(*)(cocos2d::CCNode*, cocos2d::CCComponent*)>(base+0x124a80)(this, p0);
}

void cocos2d::CCNode::removeAllComponents() {
    return reinterpret_cast<void(*)(cocos2d::CCNode*)>(base+0x124aa0)(this);
}

void cocos2d::CCNode::updateTweenAction(float p0, char const* p1) {
    return reinterpret_cast<void(*)(cocos2d::CCNode*, float, char const*)>(base+0x1249c0)(this, p0, p1);
}

cocos2d::CCNode::CCNode() {
    reinterpret_cast<cocos2d::CCNode*(*)(cocos2d::CCNode*)>(base+0x122550)(this);
}

cocos2d::CCNodeRGBA::~CCNodeRGBA() {
    reinterpret_cast<cocos2d::CCNodeRGBA*(*)(cocos2d::CCNodeRGBA*)>(base+0x124bb0)(this);
}

bool cocos2d::CCNodeRGBA::init() {
    return reinterpret_cast<bool(*)(cocos2d::CCNodeRGBA*)>(base+0x124bf0)(this);
}

GLubyte cocos2d::CCNodeRGBA::getOpacity() {
    return reinterpret_cast<GLubyte(*)(cocos2d::CCNodeRGBA*)>(base+0x124cd0)(this);
}

GLubyte cocos2d::CCNodeRGBA::getDisplayedOpacity() {
    return reinterpret_cast<GLubyte(*)(cocos2d::CCNodeRGBA*)>(base+0x124cf0)(this);
}

void cocos2d::CCNodeRGBA::setOpacity(GLubyte p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNodeRGBA*, GLubyte)>(base+0x124d10)(this, p0);
}

void cocos2d::CCNodeRGBA::updateDisplayedOpacity(GLubyte p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNodeRGBA*, GLubyte)>(base+0x124e50)(this, p0);
}

bool cocos2d::CCNodeRGBA::isCascadeOpacityEnabled() {
    return reinterpret_cast<bool(*)(cocos2d::CCNodeRGBA*)>(base+0x124fe0)(this);
}

void cocos2d::CCNodeRGBA::setCascadeOpacityEnabled(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNodeRGBA*, bool)>(base+0x125000)(this, p0);
}

cocos2d::_ccColor3B const& cocos2d::CCNodeRGBA::getColor() {
    return reinterpret_cast<cocos2d::_ccColor3B const&(*)(cocos2d::CCNodeRGBA*)>(base+0x125020)(this);
}

cocos2d::_ccColor3B const& cocos2d::CCNodeRGBA::getDisplayedColor() {
    return reinterpret_cast<cocos2d::_ccColor3B const&(*)(cocos2d::CCNodeRGBA*)>(base+0x125040)(this);
}

void cocos2d::CCNodeRGBA::setColor(cocos2d::_ccColor3B const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNodeRGBA*, cocos2d::_ccColor3B const&)>(base+0x125060)(this, p0);
}

void cocos2d::CCNodeRGBA::updateDisplayedColor(cocos2d::_ccColor3B const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNodeRGBA*, cocos2d::_ccColor3B const&)>(base+0x1251e0)(this, p0);
}

bool cocos2d::CCNodeRGBA::isCascadeColorEnabled() {
    return reinterpret_cast<bool(*)(cocos2d::CCNodeRGBA*)>(base+0x125320)(this);
}

void cocos2d::CCNodeRGBA::setCascadeColorEnabled(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCNodeRGBA*, bool)>(base+0x125340)(this, p0);
}

cocos2d::CCNodeRGBA::CCNodeRGBA() {
    reinterpret_cast<cocos2d::CCNodeRGBA*(*)(cocos2d::CCNodeRGBA*)>(base+0x124b30)(this);
}

cocos2d::CCMenuItem::~CCMenuItem() {
    reinterpret_cast<cocos2d::CCMenuItem*(*)(cocos2d::CCMenuItem*)>(base+0x1fb8e0)(this);
}

void cocos2d::CCMenuItem::activate() {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItem*)>(base+0x1fba70)(this);
}

void cocos2d::CCMenuItem::selected() {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItem*)>(base+0x1fb9e0)(this);
}

void cocos2d::CCMenuItem::unselected() {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItem*)>(base+0x1fb9f0)(this);
}

void cocos2d::CCMenuItem::registerScriptTapHandler(int p0) {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItem*, int)>(base+0x1fba00)(this, p0);
}

void cocos2d::CCMenuItem::unregisterScriptTapHandler() {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItem*)>(base+0x1fba30)(this);
}

bool cocos2d::CCMenuItem::isEnabled() {
    return reinterpret_cast<bool(*)(cocos2d::CCMenuItem*)>(base+0x1fbaf0)(this);
}

void cocos2d::CCMenuItem::setEnabled(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItem*, bool)>(base+0x1fbae0)(this, p0);
}

bool cocos2d::CCMenuItem::isSelected() {
    return reinterpret_cast<bool(*)(cocos2d::CCMenuItem*)>(base+0x1fbb50)(this);
}

void cocos2d::CCMenuItemSprite::selected() {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemSprite*)>(base+0x1fd3f0)(this);
}

void cocos2d::CCMenuItemSprite::unselected() {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemSprite*)>(base+0x1fd470)(this);
}

void cocos2d::CCMenuItemSprite::setEnabled(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemSprite*, bool)>(base+0x1fd4e0)(this, p0);
}

cocos2d::CCNode* cocos2d::CCMenuItemSprite::getNormalImage() {
    return reinterpret_cast<cocos2d::CCNode*(*)(cocos2d::CCMenuItemSprite*)>(base+0x1fcee0)(this);
}

void cocos2d::CCMenuItemSprite::setNormalImage(cocos2d::CCNode* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemSprite*, cocos2d::CCNode*)>(base+0x1fcef0)(this, p0);
}

cocos2d::CCNode* cocos2d::CCMenuItemSprite::getSelectedImage() {
    return reinterpret_cast<cocos2d::CCNode*(*)(cocos2d::CCMenuItemSprite*)>(base+0x1fcfc0)(this);
}

void cocos2d::CCMenuItemSprite::setSelectedImage(cocos2d::CCNode* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemSprite*, cocos2d::CCNode*)>(base+0x1fcfd0)(this, p0);
}

cocos2d::CCNode* cocos2d::CCMenuItemSprite::getDisabledImage() {
    return reinterpret_cast<cocos2d::CCNode*(*)(cocos2d::CCMenuItemSprite*)>(base+0x1fd070)(this);
}

void cocos2d::CCMenuItemSprite::setDisabledImage(cocos2d::CCNode* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemSprite*, cocos2d::CCNode*)>(base+0x1fd080)(this, p0);
}

void cocos2d::CCMenuItemSprite::updateImagesVisibility() {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemSprite*)>(base+0x1fd510)(this);
}

cocos2d::CCMenuItemSprite* cocos2d::CCMenuItemSprite::create(cocos2d::CCNode* p0, cocos2d::CCNode* p1, cocos2d::CCNode* p2) {
    return reinterpret_cast<cocos2d::CCMenuItemSprite*(*)(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCNode*)>(base+0x1fd120)(p0, p1, p2);
}

cocos2d::CCMenuItemSprite* cocos2d::CCMenuItemSprite::create(cocos2d::CCNode* p0, cocos2d::CCNode* p1, cocos2d::CCNode* p2, cocos2d::CCObject* p3, cocos2d::SEL_MenuHandler p4) {
    return reinterpret_cast<cocos2d::CCMenuItemSprite*(*)(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, cocos2d::SEL_MenuHandler)>(base+0x1fd140)(p0, p1, p2, p3, p4);
}

cocos2d::CCMenuItemSprite* cocos2d::CCMenuItemSprite::create(cocos2d::CCNode* p0, cocos2d::CCNode* p1, cocos2d::CCObject* p2, cocos2d::SEL_MenuHandler p3) {
    return reinterpret_cast<cocos2d::CCMenuItemSprite*(*)(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, cocos2d::SEL_MenuHandler)>(base+0x1fd2d0)(p0, p1, p2, p3);
}

bool cocos2d::CCMenuItemImage::init() {
    return reinterpret_cast<bool(*)(cocos2d::CCMenuItemImage*)>(base+0x1fd750)(this);
}

cocos2d::CCMenuItemLabel::~CCMenuItemLabel() {
    reinterpret_cast<cocos2d::CCMenuItemLabel*(*)(cocos2d::CCMenuItemLabel*)>(base+0x1fc0d0)(this);
}

void cocos2d::CCMenuItemLabel::activate() {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemLabel*)>(base+0x1fc240)(this);
}

void cocos2d::CCMenuItemLabel::selected() {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemLabel*)>(base+0x1fc2e0)(this);
}

void cocos2d::CCMenuItemLabel::unselected() {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemLabel*)>(base+0x1fc380)(this);
}

void cocos2d::CCMenuItemLabel::setEnabled(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemLabel*, bool)>(base+0x1fc3f0)(this, p0);
}

cocos2d::_ccColor3B const& cocos2d::CCMenuItemLabel::getDisabledColor() {
    return reinterpret_cast<cocos2d::_ccColor3B const&(*)(cocos2d::CCMenuItemLabel*)>(base+0x1fbb80)(this);
}

void cocos2d::CCMenuItemLabel::setDisabledColor(cocos2d::_ccColor3B const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemLabel*, cocos2d::_ccColor3B const&)>(base+0x1fbb90)(this, p0);
}

cocos2d::CCNode* cocos2d::CCMenuItemLabel::getLabel() {
    return reinterpret_cast<cocos2d::CCNode*(*)(cocos2d::CCMenuItemLabel*)>(base+0x1fbbb0)(this);
}

void cocos2d::CCMenuItemLabel::setLabel(cocos2d::CCNode* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCMenuItemLabel*, cocos2d::CCNode*)>(base+0x1fbbc0)(this, p0);
}

cocos2d::CCLayerRGBA::~CCLayerRGBA() {
    reinterpret_cast<cocos2d::CCLayerRGBA*(*)(cocos2d::CCLayerRGBA*)>(base+0x273aa0)(this);
}

bool cocos2d::CCLayerRGBA::init() {
    return reinterpret_cast<bool(*)(cocos2d::CCLayerRGBA*)>(base+0x273b40)(this);
}

GLubyte cocos2d::CCLayerRGBA::getOpacity() {
    return reinterpret_cast<GLubyte(*)(cocos2d::CCLayerRGBA*)>(base+0x273be0)(this);
}

GLubyte cocos2d::CCLayerRGBA::getDisplayedOpacity() {
    return reinterpret_cast<GLubyte(*)(cocos2d::CCLayerRGBA*)>(base+0x273c00)(this);
}

void cocos2d::CCLayerRGBA::setOpacity(unsigned char p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayerRGBA*, unsigned char)>(base+0x273c20)(this, p0);
}

void cocos2d::CCLayerRGBA::updateDisplayedOpacity(unsigned char p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayerRGBA*, unsigned char)>(base+0x273f20)(this, p0);
}

bool cocos2d::CCLayerRGBA::isCascadeOpacityEnabled() {
    return reinterpret_cast<bool(*)(cocos2d::CCLayerRGBA*)>(base+0x2741f0)(this);
}

void cocos2d::CCLayerRGBA::setCascadeOpacityEnabled(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayerRGBA*, bool)>(base+0x274210)(this, p0);
}

cocos2d::_ccColor3B const& cocos2d::CCLayerRGBA::getColor() {
    return reinterpret_cast<cocos2d::_ccColor3B const&(*)(cocos2d::CCLayerRGBA*)>(base+0x273d60)(this);
}

cocos2d::_ccColor3B const& cocos2d::CCLayerRGBA::getDisplayedColor() {
    return reinterpret_cast<cocos2d::_ccColor3B const&(*)(cocos2d::CCLayerRGBA*)>(base+0x273d80)(this);
}

void cocos2d::CCLayerRGBA::setColor(cocos2d::_ccColor3B const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayerRGBA*, cocos2d::_ccColor3B const&)>(base+0x273da0)(this, p0);
}

void cocos2d::CCLayerRGBA::updateDisplayedColor(cocos2d::_ccColor3B const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayerRGBA*, cocos2d::_ccColor3B const&)>(base+0x2740b0)(this, p0);
}

bool cocos2d::CCLayerRGBA::isCascadeColorEnabled() {
    return reinterpret_cast<bool(*)(cocos2d::CCLayerRGBA*)>(base+0x274230)(this);
}

void cocos2d::CCLayerRGBA::setCascadeColorEnabled(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayerRGBA*, bool)>(base+0x274250)(this, p0);
}

cocos2d::CCLayerColor::~CCLayerColor() {
    reinterpret_cast<cocos2d::CCLayerColor*(*)(cocos2d::CCLayerColor*)>(base+0x2743e0)(this);
}

bool cocos2d::CCLayerColor::init() {
    return reinterpret_cast<bool(*)(cocos2d::CCLayerColor*)>(base+0x274800)(this);
}

void cocos2d::CCLayerColor::setContentSize(cocos2d::CCSize const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayerColor*, cocos2d::CCSize const&)>(base+0x2749f0)(this, p0);
}

void cocos2d::CCLayerColor::draw() {
    return reinterpret_cast<void(*)(cocos2d::CCLayerColor*)>(base+0x274b50)(this);
}

void cocos2d::CCLayerColor::setOpacity(unsigned char p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayerColor*, unsigned char)>(base+0x274db0)(this, p0);
}

void cocos2d::CCLayerColor::setColor(cocos2d::_ccColor3B const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayerColor*, cocos2d::_ccColor3B const&)>(base+0x274c20)(this, p0);
}

bool cocos2d::CCLayerColor::initWithColor(cocos2d::_ccColor4B const& p0, float p1, float p2) {
    return reinterpret_cast<bool(*)(cocos2d::CCLayerColor*, cocos2d::_ccColor4B const&, float, float)>(base+0x274850)(this, p0, p1, p2);
}

bool cocos2d::CCLayerColor::initWithColor(cocos2d::_ccColor4B const& p0) {
    return reinterpret_cast<bool(*)(cocos2d::CCLayerColor*, cocos2d::_ccColor4B const&)>(base+0x2749a0)(this, p0);
}

cocos2d::ccBlendFunc cocos2d::CCLayerColor::getBlendFunc() {
    return reinterpret_cast<cocos2d::ccBlendFunc(*)(cocos2d::CCLayerColor*)>(base+0x274480)(this);
}

void cocos2d::CCLayerColor::setBlendFunc(cocos2d::_ccBlendFunc p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayerColor*, cocos2d::_ccBlendFunc)>(base+0x2744a0)(this, p0);
}

void cocos2d::CCLayerColor::updateColor() {
    return reinterpret_cast<void(*)(cocos2d::CCLayerColor*)>(base+0x274ae0)(this);
}

cocos2d::CCLayer::~CCLayer() {
    reinterpret_cast<cocos2d::CCLayer*(*)(cocos2d::CCLayer*)>(base+0x272900)(this);
}

bool cocos2d::CCLayer::init() {
    return reinterpret_cast<bool(*)(cocos2d::CCLayer*)>(base+0x2729a0)(this);
}

void cocos2d::CCLayer::onEnter() {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*)>(base+0x273300)(this);
}

void cocos2d::CCLayer::onEnterTransitionDidFinish() {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*)>(base+0x273490)(this);
}

void cocos2d::CCLayer::onExit() {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*)>(base+0x2733c0)(this);
}

bool cocos2d::CCLayer::ccTouchBegan(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<bool(*)(cocos2d::CCLayer*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x2734d0)(this, p0, p1);
}

void cocos2d::CCLayer::ccTouchMoved(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x273550)(this, p0, p1);
}

void cocos2d::CCLayer::ccTouchEnded(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x2735d0)(this, p0, p1);
}

void cocos2d::CCLayer::ccTouchCancelled(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x273650)(this, p0, p1);
}

void cocos2d::CCLayer::ccTouchesBegan(cocos2d::CCSet* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, cocos2d::CCSet*, cocos2d::CCEvent*)>(base+0x2736d0)(this, p0, p1);
}

void cocos2d::CCLayer::ccTouchesMoved(cocos2d::CCSet* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, cocos2d::CCSet*, cocos2d::CCEvent*)>(base+0x273750)(this, p0, p1);
}

void cocos2d::CCLayer::ccTouchesEnded(cocos2d::CCSet* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, cocos2d::CCSet*, cocos2d::CCEvent*)>(base+0x2737d0)(this, p0, p1);
}

void cocos2d::CCLayer::ccTouchesCancelled(cocos2d::CCSet* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, cocos2d::CCSet*, cocos2d::CCEvent*)>(base+0x273850)(this, p0, p1);
}

void cocos2d::CCLayer::didAccelerate(cocos2d::CCAcceleration* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, cocos2d::CCAcceleration*)>(base+0x272ea0)(this, p0);
}

void cocos2d::CCLayer::registerWithTouchDispatcher() {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*)>(base+0x272b40)(this);
}

void cocos2d::CCLayer::registerScriptTouchHandler(int p0, bool p1, int p2, bool p3) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, int, bool, int, bool)>(base+0x272bd0)(this, p0, p1, p2, p3);
}

void cocos2d::CCLayer::unregisterScriptTouchHandler() {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*)>(base+0x272c30)(this);
}

bool cocos2d::CCLayer::isTouchEnabled() {
    return reinterpret_cast<bool(*)(cocos2d::CCLayer*)>(base+0x272ce0)(this);
}

void cocos2d::CCLayer::setTouchEnabled(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, bool)>(base+0x272cf0)(this, p0);
}

void cocos2d::CCLayer::setTouchMode(cocos2d::ccTouchesMode p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, cocos2d::ccTouchesMode)>(base+0x272d60)(this, p0);
}

int cocos2d::CCLayer::getTouchMode() {
    return reinterpret_cast<int(*)(cocos2d::CCLayer*)>(base+0x272e10)(this);
}

void cocos2d::CCLayer::setTouchPriority(int p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, int)>(base+0x272db0)(this, p0);
}

int cocos2d::CCLayer::getTouchPriority() {
    return reinterpret_cast<int(*)(cocos2d::CCLayer*)>(base+0x272e00)(this);
}

bool cocos2d::CCLayer::isAccelerometerEnabled() {
    return reinterpret_cast<bool(*)(cocos2d::CCLayer*)>(base+0x272e20)(this);
}

void cocos2d::CCLayer::setAccelerometerEnabled(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, bool)>(base+0x272e30)(this, p0);
}

void cocos2d::CCLayer::setAccelerometerInterval(double p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, double)>(base+0x272e70)(this, p0);
}

bool cocos2d::CCLayer::isKeypadEnabled() {
    return reinterpret_cast<bool(*)(cocos2d::CCLayer*)>(base+0x272f70)(this);
}

void cocos2d::CCLayer::setKeypadEnabled(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, bool)>(base+0x272f80)(this, p0);
}

bool cocos2d::CCLayer::isKeyboardEnabled() {
    return reinterpret_cast<bool(*)(cocos2d::CCLayer*)>(base+0x273010)(this);
}

void cocos2d::CCLayer::setKeyboardEnabled(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, bool)>(base+0x273020)(this, p0);
}

bool cocos2d::CCLayer::isMouseEnabled() {
    return reinterpret_cast<bool(*)(cocos2d::CCLayer*)>(base+0x273090)(this);
}

void cocos2d::CCLayer::setMouseEnabled(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, bool)>(base+0x2730a0)(this, p0);
}

void cocos2d::CCLayer::keyBackClicked() {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*)>(base+0x273160)(this);
}

void cocos2d::CCLayer::keyMenuClicked() {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*)>(base+0x273200)(this);
}

void cocos2d::CCLayer::keyDown(cocos2d::enumKeyCodes p0) {
    return reinterpret_cast<void(*)(cocos2d::CCLayer*, cocos2d::enumKeyCodes)>(base+0x273280)(this, p0);
}

cocos2d::CCLayer::CCLayer() {
    reinterpret_cast<cocos2d::CCLayer*(*)(cocos2d::CCLayer*)>(base+0x2725b0)(this);
}

cocos2d::CCLayer* cocos2d::CCLayer::create() {
    return reinterpret_cast<cocos2d::CCLayer*(*)()>(base+0x272a00)();
}

cocos2d::CCSprite::~CCSprite() {
    reinterpret_cast<cocos2d::CCSprite*(*)(cocos2d::CCSprite*)>(base+0x133430)(this);
}

bool cocos2d::CCSprite::init() {
    return reinterpret_cast<bool(*)(cocos2d::CCSprite*)>(base+0x132ef0)(this);
}

void cocos2d::CCSprite::setVertexZ(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, float)>(base+0x134a80)(this, p0);
}

void cocos2d::CCSprite::setScaleX(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, float)>(base+0x134900)(this, p0);
}

void cocos2d::CCSprite::setScaleY(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, float)>(base+0x134980)(this, p0);
}

void cocos2d::CCSprite::setScale(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, float)>(base+0x134a00)(this, p0);
}

void cocos2d::CCSprite::setPosition(cocos2d::CCPoint const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCPoint const&)>(base+0x134650)(this, p0);
}

void cocos2d::CCSprite::setSkewX(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, float)>(base+0x134820)(this, p0);
}

void cocos2d::CCSprite::setSkewY(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, float)>(base+0x134890)(this, p0);
}

void cocos2d::CCSprite::setAnchorPoint(cocos2d::CCPoint const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCPoint const&)>(base+0x134af0)(this, p0);
}

void cocos2d::CCSprite::setVisible(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, bool)>(base+0x134b70)(this, p0);
}

void cocos2d::CCSprite::setRotation(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, float)>(base+0x1346d0)(this, p0);
}

void cocos2d::CCSprite::setRotationX(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, float)>(base+0x134740)(this, p0);
}

void cocos2d::CCSprite::setRotationY(float p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, float)>(base+0x1347b0)(this, p0);
}

void cocos2d::CCSprite::ignoreAnchorPointForPosition(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, bool)>(base+0x134b60)(this, p0);
}

void cocos2d::CCSprite::addChild(cocos2d::CCNode* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCNode*)>(base+0x134190)(this, p0);
}

void cocos2d::CCSprite::addChild(cocos2d::CCNode* p0, int p1) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCNode*, int)>(base+0x1341a0)(this, p0, p1);
}

void cocos2d::CCSprite::addChild(cocos2d::CCNode* p0, int p1, int p2) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCNode*, int, int)>(base+0x1341b0)(this, p0, p1, p2);
}

void cocos2d::CCSprite::removeChild(cocos2d::CCNode* p0, bool p1) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCNode*, bool)>(base+0x134300)(this, p0, p1);
}

void cocos2d::CCSprite::removeAllChildrenWithCleanup(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, bool)>(base+0x134340)(this, p0);
}

void cocos2d::CCSprite::reorderChild(cocos2d::CCNode* p0, int p1) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCNode*, int)>(base+0x134270)(this, p0, p1);
}

void cocos2d::CCSprite::sortAllChildren() {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*)>(base+0x1343f0)(this);
}

void cocos2d::CCSprite::draw() {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*)>(base+0x134070)(this);
}

void cocos2d::CCSprite::updateTransform() {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*)>(base+0x133b70)(this);
}

void cocos2d::CCSprite::setOpacity(unsigned char p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, unsigned char)>(base+0x134da0)(this, p0);
}

void cocos2d::CCSprite::updateDisplayedOpacity(unsigned char p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, unsigned char)>(base+0x1354c0)(this, p0);
}

void cocos2d::CCSprite::setColor(cocos2d::_ccColor3B const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::_ccColor3B const&)>(base+0x134ff0)(this, p0);
}

void cocos2d::CCSprite::updateDisplayedColor(cocos2d::_ccColor3B const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::_ccColor3B const&)>(base+0x135370)(this, p0);
}

void cocos2d::CCSprite::setOpacityModifyRGB(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, bool)>(base+0x135200)(this, p0);
}

bool cocos2d::CCSprite::isOpacityModifyRGB() {
    return reinterpret_cast<bool(*)(cocos2d::CCSprite*)>(base+0x135350)(this);
}

bool cocos2d::CCSprite::initWithTexture(cocos2d::CCTexture2D* p0) {
    return reinterpret_cast<bool(*)(cocos2d::CCSprite*, cocos2d::CCTexture2D*)>(base+0x133110)(this, p0);
}

bool cocos2d::CCSprite::initWithTexture(cocos2d::CCTexture2D* p0, cocos2d::CCRect const& p1) {
    return reinterpret_cast<bool(*)(cocos2d::CCSprite*, cocos2d::CCTexture2D*, cocos2d::CCRect const&)>(base+0x1330f0)(this, p0, p1);
}

bool cocos2d::CCSprite::initWithTexture(cocos2d::CCTexture2D* p0, cocos2d::CCRect const& p1, bool p2) {
    return reinterpret_cast<bool(*)(cocos2d::CCSprite*, cocos2d::CCTexture2D*, cocos2d::CCRect const&, bool)>(base+0x132f10)(this, p0, p1, p2);
}

bool cocos2d::CCSprite::initWithSpriteFrame(cocos2d::CCSpriteFrame* p0) {
    return reinterpret_cast<bool(*)(cocos2d::CCSprite*, cocos2d::CCSpriteFrame*)>(base+0x133270)(this, p0);
}

bool cocos2d::CCSprite::initWithSpriteFrameName(char const* p0) {
    return reinterpret_cast<bool(*)(cocos2d::CCSprite*, char const*)>(base+0x1332c0)(this, p0);
}

bool cocos2d::CCSprite::initWithFile(char const* p0) {
    return reinterpret_cast<bool(*)(cocos2d::CCSprite*, char const*)>(base+0x133180)(this, p0);
}

bool cocos2d::CCSprite::initWithFile(char const* p0, cocos2d::CCRect const& p1) {
    return reinterpret_cast<bool(*)(cocos2d::CCSprite*, char const*, cocos2d::CCRect const&)>(base+0x133210)(this, p0, p1);
}

void cocos2d::CCSprite::setTexture(cocos2d::CCTexture2D* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCTexture2D*)>(base+0x135a90)(this, p0);
}

cocos2d::CCTexture2D* cocos2d::CCSprite::getTexture() {
    return reinterpret_cast<cocos2d::CCTexture2D*(*)(cocos2d::CCSprite*)>(base+0x135c00)(this);
}

void cocos2d::CCSprite::setChildColor(cocos2d::_ccColor3B const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::_ccColor3B const&)>(base+0x135160)(this, p0);
}

void cocos2d::CCSprite::setChildOpacity(unsigned char p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, unsigned char)>(base+0x134f50)(this, p0);
}

cocos2d::CCSpriteBatchNode* cocos2d::CCSprite::getBatchNode() {
    return reinterpret_cast<cocos2d::CCSpriteBatchNode*(*)(cocos2d::CCSprite*)>(base+0x135910)(this);
}

void cocos2d::CCSprite::setBatchNode(cocos2d::CCSpriteBatchNode* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCSpriteBatchNode*)>(base+0x135920)(this, p0);
}

void cocos2d::CCSprite::refreshTextureRect() {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*)>(base+0x133520)(this);
}

void cocos2d::CCSprite::setTextureRect(cocos2d::CCRect const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCRect const&)>(base+0x133560)(this, p0);
}

void cocos2d::CCSprite::setTextureRect(cocos2d::CCRect const& p0, bool p1, cocos2d::CCSize const& p2) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCRect const&, bool, cocos2d::CCSize const&)>(base+0x133580)(this, p0, p1, p2);
}

void cocos2d::CCSprite::setVertexRect(cocos2d::CCRect const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCRect const&)>(base+0x1338f0)(this, p0);
}

void cocos2d::CCSprite::setDisplayFrame(cocos2d::CCSpriteFrame* p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCSpriteFrame*)>(base+0x135610)(this, p0);
}

bool cocos2d::CCSprite::isFrameDisplayed(cocos2d::CCSpriteFrame* p0) {
    return reinterpret_cast<bool(*)(cocos2d::CCSprite*, cocos2d::CCSpriteFrame*)>(base+0x1356d0)(this, p0);
}

cocos2d::CCSpriteFrame* cocos2d::CCSprite::displayFrame() {
    return reinterpret_cast<cocos2d::CCSpriteFrame*(*)(cocos2d::CCSprite*)>(base+0x135760)(this);
}

void cocos2d::CCSprite::setDisplayFrameWithAnimationName(char const* p0, int p1) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, char const*, int)>(base+0x135680)(this, p0, p1);
}

void cocos2d::CCSprite::setTextureCoords(cocos2d::CCRect const& p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, cocos2d::CCRect const&)>(base+0x133910)(this, p0);
}

void cocos2d::CCSprite::updateBlendFunc() {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*)>(base+0x135a20)(this);
}

void cocos2d::CCSprite::setReorderChildDirtyRecursively() {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*)>(base+0x134550)(this);
}

void cocos2d::CCSprite::setDirtyRecursively(bool p0) {
    return reinterpret_cast<void(*)(cocos2d::CCSprite*, bool)>(base+0x1345b0)(this, p0);
}

cocos2d::CCSprite::CCSprite() {
    reinterpret_cast<cocos2d::CCSprite*(*)(cocos2d::CCSprite*)>(base+0x133300)(this);
}

cocos2d::CCSprite* cocos2d::CCSprite::create() {
    return reinterpret_cast<cocos2d::CCSprite*(*)()>(base+0x132df0)();
}

cocos2d::CCSprite* cocos2d::CCSprite::create(char const* p0) {
    return reinterpret_cast<cocos2d::CCSprite*(*)(char const*)>(base+0x132a80)(p0);
}

void cocos2d::CCMouseDelegate::rightKeyDown() {};

void cocos2d::CCMouseDelegate::rightKeyUp() {};

void cocos2d::CCMouseDelegate::scrollWheel(float, float) {};

void cocos2d::CCKeyboardDelegate::keyDown(cocos2d::enumKeyCodes) {};

void cocos2d::CCKeyboardDelegate::keyUp(cocos2d::enumKeyCodes) {};

cocos2d::CCKeyboardDelegate::CCKeyboardDelegate() {};

cocos2d::CCIMEDelegate::~CCIMEDelegate() {
    reinterpret_cast<cocos2d::CCIMEDelegate*(*)(cocos2d::CCIMEDelegate*)>(base+0x277670)(this);
}

bool cocos2d::CCIMEDelegate::attachWithIME() {
    return reinterpret_cast<bool(*)(cocos2d::CCIMEDelegate*)>(base+0x2776a0)(this);
}

bool cocos2d::CCIMEDelegate::detachWithIME() {
    return reinterpret_cast<bool(*)(cocos2d::CCIMEDelegate*)>(base+0x277880)(this);
}

cocos2d::CCIMEDelegate::CCIMEDelegate() {
    reinterpret_cast<cocos2d::CCIMEDelegate*(*)(cocos2d::CCIMEDelegate*)>(base+0x277310)(this);
}

void AppDelegate::bgScale() {
    return reinterpret_cast<void(*)(AppDelegate*)>(base+0x3aaab0)(this);
}

bool AppDelegate::applicationDidFinishLaunching() {
    return reinterpret_cast<bool(*)(AppDelegate*)>(base+0x3aa900)(this);
}

void AppDelegate::applicationDidEnterBackground() {
    return reinterpret_cast<void(*)(AppDelegate*)>(base+0x3aabe0)(this);
}

void AppDelegate::applicationWillEnterForeground() {
    return reinterpret_cast<void(*)(AppDelegate*)>(base+0x3aac80)(this);
}

bool AppDelegate::applicationWillBecomeActive() {
    return reinterpret_cast<bool(*)(AppDelegate*)>(base+0x3aab30)(this);
}

bool AppDelegate::applicationWillResignActive() {
    return reinterpret_cast<bool(*)(AppDelegate*)>(base+0x3aab50)(this);
}

void AppDelegate::trySaveGame() {
    return reinterpret_cast<void(*)(AppDelegate*)>(base+0x3aaf10)(this);
}

void AppDelegate::willSwitchToScene(cocos2d::CCScene* p0) {
    return reinterpret_cast<void(*)(AppDelegate*, cocos2d::CCScene*)>(base+0x3aaf40)(this, p0);
}

AppDelegate* AppDelegate::get() {
    return reinterpret_cast<AppDelegate*(*)()>(base+0x3aab10)();
}

bool CCSpritePlus::initWithSpriteFrameName(char const* p0) {
    return reinterpret_cast<bool(*)(CCSpritePlus*, char const*)>(base+0x248670)(this, p0);
}

CCMoveCNode* CCMoveCNode::create() {
    return reinterpret_cast<CCMoveCNode*(*)()>(base+0x1842a0)();
}

bool CCMoveCNode::init() {
    return reinterpret_cast<bool(*)(CCMoveCNode*)>(base+0x18b3d0)(this);
}

CCMoveCNode::~CCMoveCNode() {
    reinterpret_cast<CCMoveCNode*(*)(CCMoveCNode*)>(base+0x18b2c0)(this);
}

CCNodeContainer* CCNodeContainer::create() {
    return reinterpret_cast<CCNodeContainer*(*)()>(base+0xb1090)();
}

bool CCNodeContainer::init() {
    return reinterpret_cast<bool(*)(CCNodeContainer*)>(base+0xba950)(this);
}

void CCNodeContainer::visit() {
    return reinterpret_cast<void(*)(CCNodeContainer*)>(base+0xba960)(this);
}

void CCAnimatedSprite::runAnimation(gd::string p0) {
    return reinterpret_cast<void(*)(CCAnimatedSprite*, gd::string)>(base+0x1a6430)(this, p0);
}

void CCAnimatedSprite::tweenToAnimation(gd::string p0, float p1) {
    return reinterpret_cast<void(*)(CCAnimatedSprite*, gd::string, float)>(base+0x1a65b0)(this, p0, p1);
}

void CCBlockLayer::disableUI() {
    return reinterpret_cast<void(*)(CCBlockLayer*)>(base+0x2a5a80)(this);
}

void CCBlockLayer::draw() {
    return reinterpret_cast<void(*)(CCBlockLayer*)>(base+0x2a5c20)(this);
}

void CCBlockLayer::enableUI() {
    return reinterpret_cast<void(*)(CCBlockLayer*)>(base+0x2a5a90)(this);
}

void CCBlockLayer::enterAnimFinished() {
    return reinterpret_cast<void(*)(CCBlockLayer*)>(base+0x2a5bb0)(this);
}

void CCBlockLayer::enterLayer() {
    return reinterpret_cast<void(*)(CCBlockLayer*)>(base+0x2a5aa0)(this);
}

void CCBlockLayer::exitLayer() {
    return reinterpret_cast<void(*)(CCBlockLayer*)>(base+0x2a5b40)(this);
}

void CCBlockLayer::hideLayer(bool p0) {
    return reinterpret_cast<void(*)(CCBlockLayer*, bool)>(base+0x2a5ba0)(this, p0);
}

bool CCBlockLayer::init() {
    return reinterpret_cast<bool(*)(CCBlockLayer*)>(base+0x2a59c0)(this);
}

void CCBlockLayer::layerHidden() {
    return reinterpret_cast<void(*)(CCBlockLayer*)>(base+0x2a5be0)(this);
}

void CCBlockLayer::layerVisible() {
    return reinterpret_cast<void(*)(CCBlockLayer*)>(base+0x2a5bc0)(this);
}

void CCBlockLayer::registerWithTouchDispatcher() {
    return reinterpret_cast<void(*)(CCBlockLayer*)>(base+0x2a5ad0)(this);
}

void CCBlockLayer::showLayer(bool p0) {
    return reinterpret_cast<void(*)(CCBlockLayer*, bool)>(base+0x2a5b90)(this, p0);
}

CCCircleWave* CCCircleWave::create(float p0, float p1, float p2, bool p3) {
    return reinterpret_cast<CCCircleWave*(*)(float, float, float, bool)>(base+0xbd270)(p0, p1, p2, p3);
}

CCCircleWave* CCCircleWave::create(float p0, float p1, float p2, bool p3, bool p4) {
    return reinterpret_cast<CCCircleWave*(*)(float, float, float, bool, bool)>(base+0xbd290)(p0, p1, p2, p3, p4);
}

bool CCCircleWave::init(float p0, float p1, float p2, bool p3, bool p4) {
    return reinterpret_cast<bool(*)(CCCircleWave*, float, float, float, bool, bool)>(base+0xbd380)(this, p0, p1, p2, p3, p4);
}

void CCCircleWave::followObject(cocos2d::CCNode* p0, bool p1) {
    return reinterpret_cast<void(*)(CCCircleWave*, cocos2d::CCNode*, bool)>(base+0xbd670)(this, p0, p1);
}

void CCCircleWave::updatePosition(float p0) {
    return reinterpret_cast<void(*)(CCCircleWave*, float)>(base+0xbd630)(this, p0);
}

CCLightFlash* CCLightFlash::create() {
    return reinterpret_cast<CCLightFlash*(*)()>(base+0x295870)();
}

void CCLightFlash::playEffect(cocos2d::CCPoint p0, cocos2d::_ccColor3B p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, float p13, float p14, float p15, int p16, bool p17, bool p18, float p19) {
    return reinterpret_cast<void(*)(CCLightFlash*, cocos2d::CCPoint, cocos2d::_ccColor3B, float, float, float, float, float, float, float, float, float, float, float, float, float, float, int, bool, bool, float)>(base+0x295900)(this, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19);
}

CCMenuItemSpriteExtra* CCMenuItemSpriteExtra::create(cocos2d::CCNode* p0, cocos2d::CCNode* p1, cocos2d::CCObject* p2, cocos2d::SEL_MenuHandler p3) {
    return reinterpret_cast<CCMenuItemSpriteExtra*(*)(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, cocos2d::SEL_MenuHandler)>(base+0x1253c0)(p0, p1, p2, p3);
}

void CCMenuItemSpriteExtra::setSizeMult(float p0) {
    return reinterpret_cast<void(*)(CCMenuItemSpriteExtra*, float)>(base+0x1255e0)(this, p0);
}

CCMenuItemSpriteExtra::CCMenuItemSpriteExtra() {
    reinterpret_cast<CCMenuItemSpriteExtra*(*)(CCMenuItemSpriteExtra*)>(base+0x32670)(this);
}

bool CCMenuItemSpriteExtra::init(cocos2d::CCNode* p0, cocos2d::CCNode* p1, cocos2d::CCObject* p2, cocos2d::SEL_MenuHandler p3) {
    return reinterpret_cast<bool(*)(CCMenuItemSpriteExtra*, cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, cocos2d::SEL_MenuHandler)>(base+0x125450)(this, p0, p1, p2, p3);
}

CCMenuItemToggler* CCMenuItemToggler::create(cocos2d::CCNode* p0, cocos2d::CCNode* p1, cocos2d::CCObject* p2, cocos2d::SEL_MenuHandler p3) {
    return reinterpret_cast<CCMenuItemToggler*(*)(cocos2d::CCNode*, cocos2d::CCNode*, cocos2d::CCObject*, cocos2d::SEL_MenuHandler)>(base+0x38400)(p0, p1, p2, p3);
}

void CCMenuItemToggler::setSizeMult(float p0) {
    return reinterpret_cast<void(*)(CCMenuItemToggler*, float)>(base+0x38a40)(this, p0);
}

void CCMenuItemToggler::toggle(bool p0) {
    reinterpret_cast<void(*)(CCMenuItemToggler*, bool)>(base+0x38950)(this, p0);
}

CCScrollLayerExt::~CCScrollLayerExt() {
    reinterpret_cast<CCScrollLayerExt*(*)(CCScrollLayerExt*)>(base+0x2359b0)(this);
}

void CCScrollLayerExt::visit() {
    return reinterpret_cast<void(*)(CCScrollLayerExt*)>(base+0x236550)(this);
}

bool CCScrollLayerExt::ccTouchBegan(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<bool(*)(CCScrollLayerExt*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x235ef0)(this, p0, p1);
}

void CCScrollLayerExt::ccTouchMoved(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(CCScrollLayerExt*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x236300)(this, p0, p1);
}

void CCScrollLayerExt::ccTouchEnded(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(CCScrollLayerExt*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x236020)(this, p0, p1);
}

void CCScrollLayerExt::ccTouchCancelled(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(CCScrollLayerExt*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x2362a0)(this, p0, p1);
}

void CCScrollLayerExt::registerWithTouchDispatcher() {
    return reinterpret_cast<void(*)(CCScrollLayerExt*)>(base+0x235eb0)(this);
}

void CCScrollLayerExt::preVisitWithClippingRect(cocos2d::CCRect p0) {
    return reinterpret_cast<void(*)(CCScrollLayerExt*, cocos2d::CCRect)>(base+0x2366a0)(this, p0);
}

void CCScrollLayerExt::postVisit() {
    return reinterpret_cast<void(*)(CCScrollLayerExt*)>(base+0x236720)(this);
}

void CCScrollLayerExt::moveToTop() {
    return reinterpret_cast<void(*)(CCScrollLayerExt*)>(base+0x235870)(this);
}

void CCScrollLayerExt::moveToTopWithOffset(float p0) {
    return reinterpret_cast<void(*)(CCScrollLayerExt*, float)>(base+0x2357d0)(this, p0);
}

FLAlertLayer::~FLAlertLayer() {
    reinterpret_cast<FLAlertLayer*(*)(FLAlertLayer*)>(base+0x25db60)(this);
}

void FLAlertLayer::onEnter() {
    return reinterpret_cast<void(*)(FLAlertLayer*)>(base+0x25f350)(this);
}

bool FLAlertLayer::ccTouchBegan(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<bool(*)(FLAlertLayer*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x25ee40)(this, p0, p1);
}

void FLAlertLayer::ccTouchMoved(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(FLAlertLayer*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x25f0a0)(this, p0, p1);
}

void FLAlertLayer::ccTouchEnded(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(FLAlertLayer*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x25ef60)(this, p0, p1);
}

void FLAlertLayer::ccTouchCancelled(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(FLAlertLayer*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x25f020)(this, p0, p1);
}

void FLAlertLayer::registerWithTouchDispatcher() {
    return reinterpret_cast<void(*)(FLAlertLayer*)>(base+0x25f2e0)(this);
}

void FLAlertLayer::keyBackClicked() {
    return reinterpret_cast<void(*)(FLAlertLayer*)>(base+0x25ed90)(this);
}

void FLAlertLayer::keyDown(cocos2d::enumKeyCodes p0) {
    return reinterpret_cast<void(*)(FLAlertLayer*, cocos2d::enumKeyCodes)>(base+0x25ece0)(this, p0);
}

void FLAlertLayer::show() {
    return reinterpret_cast<void(*)(FLAlertLayer*)>(base+0x25f120)(this);
}

bool FLAlertLayer::init(FLAlertLayerProtocol* p0, char const* p1, gd::string p2, char const* p3, char const* p4, float p5, bool p6, float p7) {
    return reinterpret_cast<bool(*)(FLAlertLayer*, FLAlertLayerProtocol*, char const*, gd::string, char const*, char const*, float, bool, float)>(base+0x25e1b0)(this, p0, p1, p2, p3, p4, p5, p6, p7);
}

FLAlertLayer* FLAlertLayer::create(FLAlertLayerProtocol* p0, char const* p1, gd::string p2, char const* p3, char const* p4, float p5) {
    return reinterpret_cast<FLAlertLayer*(*)(FLAlertLayerProtocol*, char const*, gd::string, char const*, char const*, float)>(base+0x25e0e0)(p0, p1, p2, p3, p4, p5);
}

FLAlertLayer* FLAlertLayer::create(FLAlertLayerProtocol* p0, char const* p1, gd::string p2, char const* p3, char const* p4, float p5, bool p6, float p7) {
    return reinterpret_cast<FLAlertLayer*(*)(FLAlertLayerProtocol*, char const*, gd::string, char const*, char const*, float, bool, float)>(base+0x25dec0)(p0, p1, p2, p3, p4, p5, p6, p7);
}

MenuLayer::~MenuLayer() {
    reinterpret_cast<MenuLayer*(*)(MenuLayer*)>(base+0x1d1230)(this);
}

bool MenuLayer::init() {
    return reinterpret_cast<bool(*)(MenuLayer*)>(base+0x1d14b0)(this);
}

void MenuLayer::keyBackClicked() {
    return reinterpret_cast<void(*)(MenuLayer*)>(base+0x1d3160)(this);
}

void MenuLayer::keyDown(cocos2d::enumKeyCodes p0) {
    return reinterpret_cast<void(*)(MenuLayer*, cocos2d::enumKeyCodes)>(base+0x1d33d0)(this, p0);
}

void MenuLayer::googlePlaySignedIn() {
    return reinterpret_cast<void(*)(MenuLayer*)>(base+0x1d2f30)(this);
}

void MenuLayer::FLAlert_Clicked(FLAlertLayer* p0, bool p1) {
    return reinterpret_cast<void(*)(MenuLayer*, FLAlertLayer*, bool)>(base+0x1d3190)(this, p0, p1);
}

void MenuLayer::onMoreGames(cocos2d::CCObject* p0) {
    return reinterpret_cast<void(*)(MenuLayer*, cocos2d::CCObject*)>(base+0x1d2ad0)(this, p0);
}

void MenuLayer::onQuit(cocos2d::CCObject* p0) {
    return reinterpret_cast<void(*)(MenuLayer*, cocos2d::CCObject*)>(base+0x1d2b40)(this, p0);
}

void MenuLayer::scene(bool p0) {
    return reinterpret_cast<void(*)(MenuLayer*, bool)>(base+0x1d12d0)(this, p0);
}

ButtonSprite* ButtonSprite::create(char const* p0) {
    return reinterpret_cast<ButtonSprite*(*)(char const*)>(base+0x4fa10)(p0);
}

ButtonSprite* ButtonSprite::create(char const* p0, int p1, int p2, float p3, bool p4) {
    return reinterpret_cast<ButtonSprite*(*)(char const*, int, int, float, bool)>(base+0x4fa40)(p0, p1, p2, p3, p4);
}

void ButtonSprite::updateBGImage(char const* p0) {
    return reinterpret_cast<void(*)(ButtonSprite*, char const*)>(base+0x502d0)(this, p0);
}

ButtonSprite* ButtonSprite::create(char const* p0, float p1) {
    return reinterpret_cast<ButtonSprite*(*)(char const*, float)>(base+0x4fa60)(p0, p1);
}

ButtonSprite* ButtonSprite::create(cocos2d::CCSprite* p0, int p1, int p2, float p3, float p4, bool p5, char const* p6, bool p7) {
    return reinterpret_cast<ButtonSprite*(*)(cocos2d::CCSprite*, int, int, float, float, bool, char const*, bool)>(base+0x4fa90)(p0, p1, p2, p3, p4, p5, p6, p7);
}

CCTextInputNode* CCTextInputNode::create(float p0, float p1, char const* p2, char const* p3, int p4, char const* p5) {
    return reinterpret_cast<CCTextInputNode*(*)(float, float, char const*, char const*, int, char const*)>(base+0x5cfb0)(p0, p1, p2, p3, p4, p5);
}

gd::string CCTextInputNode::getString() {
    return reinterpret_cast<gd::string(*)(CCTextInputNode*)>(base+0x5d6f0)(this);
}

void CCTextInputNode::refreshLabel() {
    return reinterpret_cast<void(*)(CCTextInputNode*)>(base+0x5d730)(this);
}

void CCTextInputNode::setAllowedChars(gd::string p0) {
    return reinterpret_cast<void(*)(CCTextInputNode*, gd::string)>(base+0x5d360)(this, p0);
}

void CCTextInputNode::setLabelNormalColor(cocos2d::_ccColor3B p0) {
    return reinterpret_cast<void(*)(CCTextInputNode*, cocos2d::_ccColor3B)>(base+0x5dab0)(this, p0);
}

void CCTextInputNode::setLabelPlaceholderColor(cocos2d::_ccColor3B p0) {
    return reinterpret_cast<void(*)(CCTextInputNode*, cocos2d::_ccColor3B)>(base+0x5da90)(this, p0);
}

void CCTextInputNode::setLabelPlaceholderScale(float p0) {
    return reinterpret_cast<void(*)(CCTextInputNode*, float)>(base+0x5da70)(this, p0);
}

void CCTextInputNode::setMaxLabelScale(float p0) {
    return reinterpret_cast<void(*)(CCTextInputNode*, float)>(base+0x5da30)(this, p0);
}

void CCTextInputNode::setMaxLabelWidth(float p0) {
    return reinterpret_cast<void(*)(CCTextInputNode*, float)>(base+0x5da50)(this, p0);
}

void CCTextInputNode::setString(gd::string p0) {
    return reinterpret_cast<void(*)(CCTextInputNode*, gd::string)>(base+0x5d3e0)(this, p0);
}

void CCTextInputNode::updateLabel(gd::string p0) {
    return reinterpret_cast<void(*)(CCTextInputNode*, gd::string)>(base+0x5d4a0)(this, p0);
}

void CCTextInputNode::forceOffset() {
    return reinterpret_cast<void(*)(CCTextInputNode*)>(base+0x5ec70)(this);
}

void CCTextInputNode::registerWithTouchDispatcher() {
    return reinterpret_cast<void(*)(CCTextInputNode*)>(base+0x5eec0)(this);
}

bool CCTextInputNode::init(float p0, float p1, char const* p2, char const* p3, int p4, char const* p5) {
    return reinterpret_cast<bool(*)(CCTextInputNode*, float, float, char const*, char const*, int, char const*)>(base+0x5d180)(this, p0, p1, p2, p3, p4, p5);
}

void CCTextInputNode::visit() {
    return reinterpret_cast<void(*)(CCTextInputNode*)>(base+0x5d380)(this);
}

bool CCTextInputNode::ccTouchBegan(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<bool(*)(CCTextInputNode*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x5ec80)(this, p0, p1);
}

void CCTextInputNode::ccTouchCancelled(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(CCTextInputNode*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x5ee80)(this, p0, p1);
}

void CCTextInputNode::ccTouchEnded(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(CCTextInputNode*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x5ee60)(this, p0, p1);
}

void CCTextInputNode::ccTouchMoved(cocos2d::CCTouch* p0, cocos2d::CCEvent* p1) {
    return reinterpret_cast<void(*)(CCTextInputNode*, cocos2d::CCTouch*, cocos2d::CCEvent*)>(base+0x5eea0)(this, p0, p1);
}

void CCTextInputNode::textChanged() {
    return reinterpret_cast<void(*)(CCTextInputNode*)>(base+0x5dd70)(this);
}

void CCTextInputNode::onClickTrackNode(bool p0) {
    return reinterpret_cast<void(*)(CCTextInputNode*, bool)>(base+0x5dd40)(this, p0);
}

void CCTextInputNode::keyboardWillShow(cocos2d::CCIMEKeyboardNotificationInfo& p0) {
    return reinterpret_cast<void(*)(CCTextInputNode*, cocos2d::CCIMEKeyboardNotificationInfo&)>(base+0x5dad0)(this, p0);
}

void CCTextInputNode::keyboardWillHide(cocos2d::CCIMEKeyboardNotificationInfo& p0) {
    return reinterpret_cast<void(*)(CCTextInputNode*, cocos2d::CCIMEKeyboardNotificationInfo&)>(base+0x5dc20)(this, p0);
}

bool CCTextInputNode::onTextFieldInsertText(cocos2d::CCTextFieldTTF* p0, char const* p1, int p2) {
    return reinterpret_cast<bool(*)(CCTextInputNode*, cocos2d::CCTextFieldTTF*, char const*, int)>(base+0x5de50)(this, p0, p1, p2);
}

bool CCTextInputNode::onTextFieldAttachWithIME(cocos2d::CCTextFieldTTF* p0) {
    return reinterpret_cast<bool(*)(CCTextInputNode*, cocos2d::CCTextFieldTTF*)>(base+0x5e2c0)(this, p0);
}

bool CCTextInputNode::onTextFieldDetachWithIME(cocos2d::CCTextFieldTTF* p0) {
    return reinterpret_cast<bool(*)(CCTextInputNode*, cocos2d::CCTextFieldTTF*)>(base+0x5e610)(this, p0);
}

TableView* TableView::create(TableViewDelegate* p0, TableViewDataSource* p1, cocos2d::CCRect p2) {
    return reinterpret_cast<TableView*(*)(TableViewDelegate*, TableViewDataSource*, cocos2d::CCRect)>(base+0x37eb30)(p0, p1, p2);
}

void TableView::reloadData() {
    return reinterpret_cast<void(*)(TableView*)>(base+0x37f970)(this);
}

BoomListView* BoomListView::create(cocos2d::CCArray* p0, float p1, float p2, int p3, BoomListType p4) {
    return reinterpret_cast<BoomListView*(*)(cocos2d::CCArray*, float, float, int, BoomListType)>(base+0x18ecb0)(p0, p1, p2, p3, p4);
}

bool BoomListView::init(cocos2d::CCArray* p0, float p1, float p2, int p3, BoomListType p4) {
    return reinterpret_cast<bool(*)(BoomListView*, cocos2d::CCArray*, float, float, int, BoomListType)>(base+0x18ee00)(this, p0, p1, p2, p3, p4);
}

void BoomListView::draw() {
    return reinterpret_cast<void(*)(BoomListView*)>(base+0x18f790)(this);
}

void BoomListView::setupList() {
    return reinterpret_cast<void(*)(BoomListView*)>(base+0x18ef90)(this);
}

void BoomListView::TableViewWillDisplayCellForRowAtIndexPath(CCIndexPath& p0, TableViewCell* p1, TableView* p2) {
    return reinterpret_cast<void(*)(BoomListView*, CCIndexPath&, TableViewCell*, TableView*)>(base+0x18f030)(this, p0, p1, p2);
}

void BoomListView::cellHeightForRowAtIndexPath(CCIndexPath& p0, TableView* p1) {
    return reinterpret_cast<void(*)(BoomListView*, CCIndexPath&, TableView*)>(base+0x18f070)(this, p0, p1);
}

void BoomListView::didSelectRowAtIndexPath(CCIndexPath& p0, TableView* p1) {
    return reinterpret_cast<void(*)(BoomListView*, CCIndexPath&, TableView*)>(base+0x18f090)(this, p0, p1);
}

int BoomListView::numberOfRowsInSection(unsigned int p0, TableView* p1) {
    return reinterpret_cast<int(*)(BoomListView*, unsigned int, TableView*)>(base+0x18f0b0)(this, p0, p1);
}

void BoomListView::numberOfSectionsInTableView(TableView* p0) {
    return reinterpret_cast<void(*)(BoomListView*, TableView*)>(base+0x18f0e0)(this, p0);
}

void BoomListView::cellForRowAtIndexPath(CCIndexPath& p0, TableView* p1) {
    return reinterpret_cast<void(*)(BoomListView*, CCIndexPath&, TableView*)>(base+0x18f100)(this, p0, p1);
}

void BoomListView::TableViewCommitCellEditingStyleForRowAtIndexPath(TableView* p0, TableViewCellEditingStyle p1, CCIndexPath& p2) {
    return reinterpret_cast<void(*)(BoomListView*, TableView*, TableViewCellEditingStyle, CCIndexPath&)>(base+0x18f770)(this, p0, p1, p2);
}

void BoomListView::TableViewWillReloadCellForRowAtIndexPath(CCIndexPath& p0, TableViewCell* p1, TableView* p2) {
    return reinterpret_cast<void(*)(BoomListView*, CCIndexPath&, TableViewCell*, TableView*)>(base+0x18f050)(this, p0, p1, p2);
}

TableViewCell* BoomListView::getListCell(char const* p0) {
    return reinterpret_cast<TableViewCell*(*)(BoomListView*, char const*)>(base+0x18f200)(this, p0);
}

void BoomListView::loadCell(TableViewCell* p0, int p1) {
    return reinterpret_cast<void(*)(BoomListView*, TableViewCell*, int)>(base+0x18f4a0)(this, p0, p1);
}

CustomListView* CustomListView::create(cocos2d::CCArray* p0, float p1, float p2, int p3, BoomListType p4) {
    return reinterpret_cast<CustomListView*(*)(cocos2d::CCArray*, float, float, int, BoomListType)>(base+0x10d410)(p0, p1, p2, p3, p4);
}

void CustomListView::getListCell(char const* p0) {
    return reinterpret_cast<void(*)(CustomListView*, char const*)>(base+0x10d560)(this, p0);
}

void CustomListView::loadCell(TableViewCell* p0, int p1) {
    return reinterpret_cast<void(*)(CustomListView*, TableViewCell*, int)>(base+0x10e610)(this, p0, p1);
}

void CustomListView::setupList() {
    return reinterpret_cast<void(*)(CustomListView*)>(base+0x116e70)(this);
}

TableViewCell::TableViewCell(char const* p0, float p1, float p2) {
    reinterpret_cast<TableViewCell*(*)(TableViewCell*, char const*, float, float)>(base+0x383de0)(this, p0, p1, p2);
}
