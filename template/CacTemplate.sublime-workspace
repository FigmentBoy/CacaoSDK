{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"collis",
				"collision_exit"
			],
			[
				"index",
				"indexer_block"
			],
			[
				"CCMenuI",
				"CCMenuItemSpriteExtra"
			],
			[
				"COPIED_COL",
				"COPIED_COLOR_HSV_VALUES"
			],
			[
				"COPY",
				"COPIED_COLOR_OPACITY"
			],
			[
				"PLAYER",
				"PLAYER_COLOR_2"
			],
			[
				"ROTA",
				"ROTATION_LOCK"
			],
			[
				"PUSING_ANIM",
				"PULSING_ANIMATION_RANDOMIZE"
			],
			[
				"remove",
				"remove                            - [#int#]remove(<#const char *#>)"
			],
			[
				"gl",
				"lol_gl_parsing_this"
			],
			[
				"TRIGGER_HA",
				"TRIGGER_SHAKE"
			],
			[
				"TRIGGER_FOLLO",
				"TRIGGER_FOLLOW_Y"
			],
			[
				"ZLA",
				"ZLayerType"
			],
			[
				"_",
				"_ObjAddPackform"
			],
			[
				"parse_",
				"parse_objadd        - [#bool#]parse_objadd(<#std::string packet#>, <#ObjAddPacket &ret#>)"
			],
			[
				"differen",
				"selection_differences"
			],
			[
				"set_intersectio",
				"set_intersection                  - [#_OutputIterator#]set_intersection(<#_InputIterator1 __first1#>, <#_InputIterator1 __last1#>, <#_InputIterator2 __first2#>, <#_InputIterator2 __last2#>, <#_OutputIterator __result#>)"
			],
			[
				"update",
				"update_members"
			],
			[
				"se",
				"send"
			],
			[
				"inclu",
				"include_directories"
			],
			[
				"bezier",
				"bezierSpacing"
			],
			[
				"bezierSpacing",
				"nextBezierSpacing"
			],
			[
				"m_bezier",
				"m_bezierDrawer"
			],
			[
				"k",
				"kControlPointRadius"
			],
			[
				"m_current",
				"m_currentTouch"
			],
			[
				"m_curre",
				"m_currentTouch"
			],
			[
				"m_duration",
				"m_durationSlider"
			],
			[
				"CC",
				"CCNode"
			],
			[
				"m_follow",
				"m_followingSprite"
			],
			[
				"CCMenuItem",
				"CCMenuItemSpriteExtra"
			],
			[
				"create",
				"createWithSpriteFrameName"
			],
			[
				"split",
				"split-string\tsplitString"
			],
			[
				"stat",
				"staticmethod"
			],
			[
				"add",
				"add_executable\tbuiltin"
			],
			[
				"un",
				"unimplemented\tunimplemented!(â€¦)"
			],
			[
				"idain_Fn",
				"idain_Fn_flq_i"
			],
			[
				"spri",
				"split-string\tsplitString"
			],
			[
				"inc",
				"I-ios\tinc"
			],
			[
				"main",
				"mainthread\tObjCThreads"
			],
			[
				"in",
				"includes\tfunc"
			],
			[
				"v",
				"I-valarray\tinc"
			],
			[
				"fin",
				"fill_n\tfunc"
			],
			[
				"find",
				"find_if\tfunc"
			],
			[
				"oper",
				"operator=\tfunc"
			],
			[
				"CHK",
				"CHK_MAKE"
			],
			[
				"previous",
				"previous_no_ignore"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"cmake",
				"CMakeBuilder: New Project"
			],
			[
				"package",
				"Package Control: Disable Package"
			],
			[
				"x86",
				"Set Syntax: Assembly x86 (NASM)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"comment",
				"Colored Comments: Settings"
			],
			[
				"toggle",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"lint",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"rich",
				"Discord Rich Presence: Connect to Discord"
			],
			[
				"hopper",
				"Set Syntax: Hopper Pseudocode"
			],
			[
				"word c",
				"LaTeXWordCount: Word Count"
			],
			[
				"mycy",
				"Set Syntax: MyCython"
			],
			[
				"definition",
				"Set Syntax: Sublime Text Syntax Definition (YAML)"
			],
			[
				"My",
				"Set Syntax: MyCython"
			],
			[
				"sublime text",
				"Set Syntax: Sublime Text Syntax Definition (YAML)"
			],
			[
				"flake",
				"User: Disable Python Flake8 Lint for this file"
			],
			[
				"lsp",
				"LSP: Enable Language Server in Project"
			],
			[
				"spwn",
				"Set Syntax: SPWN"
			],
			[
				"markdo",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"word",
				"LaTeXWordCount: Word Count"
			],
			[
				"terminal",
				"Terminal View: Open Bash Terminal"
			],
			[
				"snippet",
				"Snippet: std::vector"
			],
			[
				"snippets",
				"Snippet: std::vector"
			],
			[
				"build",
				"Build With: C++ Single File - Run"
			],
			[
				"wo",
				"LaTeXWordCount: Word Count"
			],
			[
				"toggle high",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"enable",
				"Color Highlight: Enable Color Highlighting"
			],
			[
				"color high",
				"Color Highlight: Disable Color Highlighting"
			],
			[
				"toggle lint",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"toggle ",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"git",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"github",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"markdown",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"latex",
				"LaTeXWordCount: Word Count"
			],
			[
				"messa",
				"Rust: List All Messages"
			],
			[
				"toggle syn",
				"Rust: Toggle Syntax Checking"
			],
			[
				"rust syntax",
				"Rust: Toggle Syntax Checking"
			],
			[
				"rust",
				"Rust: Toggle Syntax Checking"
			],
			[
				"channelre",
				"ChannelRepositoryTools: Test Default Channel"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Licence Snippet: MIT Licence [Header] [Full Text]"
			],
			[
				"new raw",
				"PackageDev: New Raw Snippet"
			],
			[
				"color scheme",
				"UI: Select Color Scheme"
			],
			[
				"check",
				"Rust: Toggle Syntax Checking"
			],
			[
				"ansi",
				"Set Syntax: ANSI"
			],
			[
				"set syntax:rust",
				"Set Syntax: Rust Enhanced"
			],
			[
				"",
				"Build With: RustEnhanced - Script"
			],
			[
				"script",
				"Build With: RustEnhanced - Script"
			],
			[
				"configu",
				"Rust: Configure Cargo Build"
			],
			[
				"set syntax: spawn",
				"Set Syntax: Spawn"
			],
			[
				"sort",
				"Python Imports Sorter: sort imports"
			],
			[
				"pyt",
				"Python Imports Sorter: sort imports"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/jakrillis/projects/cacao/template",
		"/Users/jakrillis/projects/cacao/template/Cacao"
	],
	"file_history":
	[
		"/Users/jakrillis/projects/cacao/template/main.cpp",
		"/Users/jakrillis/Library/Logs/DiagnosticReports/Geometry Dash_2021-08-19-163948_c314.crash",
		"/Users/jakrillis/Library/Logs/DiagnosticReports/Geometry Dash_2021-08-19-164502-1_c314.crash",
		"/Users/jakrillis/Library/Logs/DiagnosticReports/osxinj_2021-08-19-164045_c314.crash",
		"/Users/jakrillis/Library/Logs/DiagnosticReports/Geometry Dash_2021-08-19-163402_c314.crash",
		"/Users/jakrillis/projects/pyedit/pyedit_engine/engine.h",
		"/Users/jakrillis/Library/Logs/DiagnosticReports/Geometry Dash_2021-08-19-160843_c314.crash",
		"/Users/jakrillis/projects/pyedit/pyedit_engine/thread_control.cpp",
		"/Users/jakrillis/Library/Logs/DiagnosticReports/Geometry Dash_2021-08-19-161244_c314.crash",
		"/Users/jakrillis/t.py",
		"/Users/jakrillis/projects/pyedit/CMakeLists.txt",
		"/Users/jakrillis/projects/pyedit/pyedit_engine/CMakeLists.txt",
		"/Users/jakrillis/projects/pyedit/pyedit_engine/cy/base.pxd",
		"/Users/jakrillis/projects/pyedit/main.cpp",
		"/Users/jakrillis/projects/pyedit/pyedit_engine/engine.mm",
		"/Users/jakrillis/Library/Logs/DiagnosticReports/Geometry Dash_2021-08-19-160057_c314.crash",
		"/Users/jakrillis/Library/Logs/DiagnosticReports/Geometry Dash_2021-08-19-154944_c314.crash",
		"/Users/jakrillis/projects/pyedit/pyedit_engine/cy/main.h",
		"/Users/jakrillis/projects/pyedit/pyedit_engine/cy/extra_bindings.h",
		"/Users/jakrillis/projects/blockflow/cBind.h",
		"/Users/jakrillis/projects/pyedit/pyedit_engine/cy/CMakeLists.txt",
		"/Users/jakrillis/projects/blockflow/pystuff.mm",
		"/Users/jakrillis/projects/cacao/create",
		"/Users/jakrillis/projects/SPWN-language/test/test.spwn",
		"/Users/jakrillis/projects/SPWN-language/test/collection.spwn",
		"/Users/jakrillis/projects/SPWN-language/libraries/std/object.spwn",
		"/Users/jakrillis/projects/gdmods/selgroup/Cacao/include/Cacao.hpp",
		"/Users/jakrillis/projects/gdmods/selgroup/main.cpp",
		"/Users/jakrillis/projects/SPWN-language/src/compiler_types.rs",
		"/Users/jakrillis/projects/SPWN-language/libraries/std/complex.spwn",
		"/Users/jakrillis/projects/gdmods/img/makefile",
		"/Users/jakrillis/projects/gdmods/img/export.m",
		"/Users/jakrillis/projects/gdmods/img/main.cpp",
		"/Users/jakrillis/projects/SwingCopter/main.cpp",
		"/Users/jakrillis/projects/SwingCopter/Cacao/CMakeLists.txt",
		"/Users/jakrillis/projects/SwingCopter/CMakeLists.txt",
		"/Users/jakrillis/projects/SwingCopter/SwingCopter.sublime-project",
		"/Users/jakrillis/projects/cacao/template/Cacao/include/CacKit",
		"/Users/jakrillis/projects/SwingCopter/Cacao/include/CacKit",
		"/Users/jakrillis/projects/verydumb/test.cac",
		"/Users/jakrillis/projects/gdmods/swing/main.cpp",
		"/Users/jakrillis/projects/verydumb/parser.py",
		"/Users/jakrillis/projects/SwingCopter/.gitignore",
		"/Users/jakrillis/projects/cacao/to_copy/makefile",
		"/Users/jakrillis/projects/cacao/scripts/cackit.cac",
		"/Users/jakrillis/GeometryDash/SymTab/gdannot.json",
		"/Users/jakrillis/projects/android/geOmEtry-dAsH/smali/com/customRobTop/BaseRobTopActivity.smali",
		"/Users/jakrillis/projects/opt/main.cpp",
		"/Users/jakrillis/projects/cacao/template/CMakeLists.txt",
		"/Users/jakrillis/projects/SwingCopter/README.md",
		"/Users/jakrillis/projects/SwingCopter/LICENSE",
		"/Users/jakrillis/projects/gd_vehicle/main.cpp",
		"/Users/jakrillis/projects/gd_vehicle/exports/CustomVehicle.h",
		"/Users/jakrillis/projects/gd_vehicle/Cacao/include/CacKit",
		"/Users/jakrillis/projects/gd_vehicle/VehicleCustomizer.sublime-project",
		"/Users/jakrillis/tmp/Tmp.sublime-project",
		"/Users/jakrillis/tmp/main.cpp",
		"/Users/jakrillis/projects/cacao/.gitignore",
		"/Users/jakrillis/projects/cacao/template/cmakelists.txt",
		"/Users/jakrillis/projects/blockflow/Cacao/include/cc_defs.hpp",
		"/Users/jakrillis/projects/cacao/to_copy/Cacao/include/cc_defs.hpp",
		"/Users/jakrillis/projects/cacao/to_copy/Cacao/include/cc_macros.hpp",
		"/Users/jakrillis/projects/blockflow/cystuff/GameObject.pyx",
		"/Users/jakrillis/Downloads/GeoGD/parse.py",
		"/Users/jakrillis/projects/collab-editor-networking/common/action.h",
		"/Users/jakrillis/projects/blockflow/cystuff/base.pxd",
		"/Users/jakrillis/projects/gdmods/gdstdlib/cocos.asm",
		"/Users/jakrillis/projects/collab-editor-networking/depends/GDLevel/level.cpp",
		"/Users/jakrillis/projects/collab-editor-networking/server/CMakeLists.txt",
		"/Users/jakrillis/projects/collab-editor-networking/CMakeLists.txt",
		"/Users/jakrillis/Downloads/enum (1).cpp",
		"/Users/jakrillis/projects/collab-editor-networking/common/action.cpp",
		"/Users/jakrillis/projects/collab-editor-networking/depends/GDLevel/Include/level.hpp",
		"/Users/jakrillis/projects/collab-editor-networking/common/util.h",
		"/Users/jakrillis/projects/collab-editor-networking/common/packets.h",
		"/Users/jakrillis/projects/collab-editor-networking/server/server.cpp",
		"/Users/jakrillis/t.cpp",
		"/Users/jakrillis/t2.cpp",
		"/Users/jakrillis/gddec/why.cpp",
		"/Users/jakrillis/projects/SPWN-language/spwn-lang/Cargo.lock",
		"/Users/jakrillis/projects/SPWN-language/spwn-lang/Cargo.toml",
		"/Users/jakrillis/projects/SPWN-language/spwn-lang/src/compiler.rs",
		"/Users/jakrillis/t.spwn",
		"/Users/jakrillis/damfile_pb2.py",
		"/Users/jakrillis/damfile.proto",
		"/Users/jakrillis/projects/gdmods/notransition/NoTransition.app/Contents/MacOS/KindaCringeBro",
		"/Users/jakrillis/projects/gdmods/notransition/NoTransition.app/Contents/MacOS/osxinj",
		"/Users/jakrillis/projects/CollabEditor/mac/collabeditor.cpp",
		"/Users/jakrillis/t.c",
		"/Users/jakrillis/projects/collab-editor-networking/depends/websocketpp/websocketpp/endpoint.hpp",
		"/Users/jakrillis/projects/collab-editor-networking/depends/GDLevel/CMakeLists.txt",
		"/Users/jakrillis/projects/collab-editor-networking/depends/asio/CMakeLists.txt",
		"/Users/jakrillis/projects/collab-editor-networking/client/CMakeLists.txt",
		"/Users/jakrillis/projects/gdmods/networking/server.cpp",
		"/Users/jakrillis/projects/gdmods/networking/CMakeLists.txt",
		"/Users/jakrillis/Library/Application Support/Sublime Text 3/Packages/ClangAutoComplete/ClangAutoComplete.sublime-settings",
		"/Users/jakrillis/projects/phantom/SpacingController.cpp",
		"/Users/jakrillis/projects/phantom/main.cpp",
		"/Users/jakrillis/look idk.html",
		"/Users/jakrillis/projects/gdmods/osxbot/combine.m",
		"/Users/jakrillis/projects/gdmods/gdstdlib/research.txt",
		"/Users/jakrillis/projects/Lvl2SPWN/gmanager.py",
		"/Users/jakrillis/projects/phantom/README.md",
		"/Users/jakrillis/projects/phantom/LICENSE",
		"/Users/jakrillis/projects/phantom/.gitignore",
		"/Users/jakrillis/vta.py",
		"/Users/jakrillis/projects/phantom/Cacao/include/Cacao.hpp",
		"/Users/jakrillis/projects/phantom/Cacao/include/cocos2dx/support/CCPointExtension.h",
		"/Users/jakrillis/projects/phantom/SpacingGui.h",
		"/Users/jakrillis/projects/gdmods/phantom/Cacao/include/cocos2dx/touch_dispatcher/CCTouch.h",
		"/Users/jakrillis/projects/gdmods/phantom/Makefile",
		"/Users/jakrillis/projects/gdmods/phantom/main.cpp",
		"/Users/jakrillis/projects/gdmods/phantom/Cacao/include/cocos2dx/draw_nodes/CCDrawingPrimitives.h",
		"/Users/jakrillis/projects/gdmods/phantom/Cacao/include/cocos2dx/draw_nodes/CCDrawNode.h",
		"/Users/jakrillis/projects/gdmods/phantom/Cacao/include/cocos2dx/include/ccTypes.h",
		"/Users/jakrillis/projects/gdmods/phantom/_tmp.cxx",
		"/Users/jakrillis/projects/gdmods/phantom/ControlPoint.cpp",
		"/Users/jakrillis/projects/gdmods/phantom/BezierEditor.cpp",
		"/Users/jakrillis/projects/gdmods/phantom/BezierCanvas.cpp",
		"/Users/jakrillis/projects/gdmods/phantom/DurationTextDelegate.cpp",
		"/Users/jakrillis/projects/gdmods/phantom/SpacingLayer.cpp",
		"/Users/jakrillis/projects/gdmods/phantom/Cacao/include/cocos2dx/cocoa/CCGeometry.h",
		"/Users/jakrillis/projects/gdmods/phantom/GrossBezierStuff.cpp",
		"/Users/jakrillis/projects/gdmods/phantom/GrossBezierStuff.h",
		"/Users/jakrillis/PARADIGM",
		"/Users/jakrillis/projects/gdmods/phantom/main.s",
		"/Users/jakrillis/projects/gdmods/phantom/Cacao/include/cocos2dx/support/CCPointExtension.h",
		"/Users/jakrillis/projects/gdmods/phantom/Cacao/include/cocos2dx/touch_dispatcher/CCTouchDelegateProtocol.h"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "pyedit (OSX)",
	"project": "CacTemplate.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"CCDrawNode",
				"Cacao/include/cocos2dx/draw_nodes/CCDrawNode.h"
			],
			[
				"CCDraw",
				"Cacao/include/cocos2dx/draw_nodes/CCDrawingPrimitives.h"
			],
			[
				"CCTouch",
				"Cacao/include/cocos2dx/touch_dispatcher/CCTouch.h"
			],
			[
				"CCPoint",
				"Cacao/include/cocos2dx/support/CCPointExtension.h"
			],
			[
				"CCGeometry",
				"Cacao/include/cocos2dx/cocoa/CCGeometry.h"
			],
			[
				"CCGeomet",
				"Cacao/include/cocos2dx/cocoa/CCGeometry.h"
			],
			[
				"CCTouchDis",
				"Cacao/include/cocos2dx/touch_dispatcher/CCTouchDelegateProtocol.h"
			],
			[
				"CCLayer",
				"Cacao/include/cocos2dx/layers_scenes_transitions_nodes/CCLayer.h"
			],
			[
				"CCDrawPrimitives",
				"Cacao/include/cocos2dx/draw_nodes/CCDrawingPrimitives.h"
			],
			[
				"ccArray",
				"Cacao/include/cocos2dx/support/data_support/ccCArray.h"
			],
			[
				"CCArray",
				"Cacao/include/cocos2dx/cocoa/CCArray.h"
			],
			[
				"CCMenuItemSprite",
				"Cacao/include/cocos2dx/custom/Sprites/CCMenuItemSpriteExtra/CCMenuItemSpriteExtra.h"
			],
			[
				"ccobject",
				"Cacao/include/cocos2dx/cocoa/CCObject.h"
			],
			[
				"CCNode.h",
				"Cacao/include/cocos2dx/base_nodes/CCNode.h"
			],
			[
				"cctypes",
				"Cacao/include/cocos2dx/include/ccTypes.h"
			],
			[
				"CCLabelBMFont",
				"Cacao/include/cocos2dx/label_nodes/CCLabelBMFont.h"
			],
			[
				"CCSprite",
				"Cacao/include/cocos2dx/sprite_nodes/CCSprite.h"
			],
			[
				"CCNode.",
				"Cacao/include/cocos2dx/base_nodes/CCNode.h"
			],
			[
				"CCMenuI",
				"Cacao/include/cocos2dx/custom/Sprites/CCMenuItemSpriteExtra/CCMenuItemSpriteExtra.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 273.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
